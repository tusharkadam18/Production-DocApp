{"version":3,"sources":["img/undraw_doctor_kw5l.svg","img/coughing_2.svg","img/doctor8.svg","img/newDoctor1.svg","img/undraw_forms_78yw.svg","img/graduation.svg","img/undraw_medical_research_qg4d.svg","img/doctor4.svg","img/calendar.svg","components/layout/Alert.js","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/authUser.js","actions/authDoctor.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/LoginUser.js","components/auth/LoginDoctor.js","components/auth/DoctorRegister.js","components/auth/UserRegister.js","components/layout/Spinner.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Patient.js","components/dashboard/Graph.js","components/dashboard/Review.js","components/dashboard/Dashboard.js","components/profile-forms/AddEducation.js","components/profile-forms/AddExperience.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileReview.js","components/profile/ReviewForm.js","actions/review.js","components/profile/Profile.js","components/routing/PrivateDoctorRoute.js","components/user/AppointmentItems.js","actions/appointment.js","components/user/Appointments.js","components/bookappointment/Form.js","components/bookappointment/AppointmentForm.js","components/routing/PrivateUserRoute.js","reducers/alert.js","reducers/authDoctor.js","reducers/authUser.js","reducers/profile.js","reducers/appointment.js","reducers/index.js","store.js","App.js","index.js","components/layout/doctor (1).png","img/mention.svg"],"names":["module","exports","connect","state","alerts","alert","length","map","key","id","className","alertType","msg","setAlert","timeOut","dispatch","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","loadDoctor","authUser","authDoctor","logout_user","logout_doctor","isUserAuthenticated","loadingUser","user","isDoctorAuthenticated","loadingDoctor","doctor","authUserLinks","to","style","width","src","require","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","href","authDoctorLinks","aria-haspopup","aria-labelledby","guestLinks","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","for","placeholder","required","minLength","alt","register","console","log","password2","rel","height","marginTop","role","getCurrentProfile","statusText","status","getProfileById","doctorId","createProfile","history","edit","push","deleteExperience","exp_id","delete","experience","experiences","exp","medical","position","format","from","_id","class","deleteEducation","edu_id","education","educations","edu","school","degree","patient","setValue","modalBody","pat","patientname","fathername","age","date","bookingId","patients","ptn","aria-hidden","data-dismiss","modal","props","children","description","Graph","chartData","setChartData","useEffect","patientData","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","Date","getMonth","janData","reduce","b","febData","marData","aprData","mayData","junData","julData","augData","sepData","octData","novData","decData","labels","datasets","label","borderColor","pointBorderColor","borderWidth","chart","options","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","review","reviews","rev","avatar","profile","deleteAccount","window","confirm","loading","Spinner","color","addEducation","put","withRouter","fieldofstudy","current","setFormdata","toDateDisabled","toggleDisabled","checked","disabled","addExperience","location","clinic","website","specialists","ruppess","timing","bio","twitter","facebook","youtube","instagram","displySocialInputs","toggleSocialInputs","social","classNameName","data-placement","getProfiles","profiles","ProfileTop","ProfileAbout","split","ProfileExperience","ProfileEducation","deleteReview","reviewId","addReview","setText","cols","rows","profileById","match","params","Component","component","rest","render","deleteAppointment","appointmentId","appointment","appointments","appnt","getAppointments","deleteAccountUser","toLocaleUpperCase","justifyContent","addAppointment","initialState","getItem","initalState","combineReducers","action","filter","setItem","removeItem","comment","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","LoginUser","LoginDoctor","DoctorRegister","UserRegister","Profiles","Profile","Dashboard","AddEducation","AddExperience","CreateProfile","EditProfile","Appointment","AppointmentForm","ReactDOM","StrictMode","document","getElementById"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,gD,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,2GCkB5BC,eAJS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAME,SAGHH,EAdD,SAAC,GAAD,IAAGE,EAAH,EAAGA,OAAH,OAA2B,OAAXA,GAAmBA,EAAOE,OAAS,GAAKF,EAAOG,KAAI,SAAAF,GAAK,OAClF,yBAAKG,IAAKH,EAAMI,GAAIC,UAAS,sBAAiBL,EAAMM,YAC/CN,EAAMO,W,gDCHFC,EAAW,SAACD,EAAKD,GAAN,IAAiBG,EAAjB,uDAAyB,IAAzB,OAAkC,SAAAC,GACtD,IAAMN,EAAKO,cACXD,EAAS,CACLE,KCNiB,YDOjBC,QAAS,CAAEN,MAAKD,YAAWF,QAG/BU,YAAW,kBAAMJ,EAAS,CAAEE,KCTJ,eDSwBC,QAAST,MAAOK,KEArDM,EARM,SAAAC,GACdA,EACCC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,SAEzCC,IAAMC,SAASC,QAAQC,OAAO,iBCShCC,EAAW,yDAAM,WAAMX,GAAN,eAAAY,EAAA,6DACvBC,aAAaP,OACZD,EAAaQ,aAAaP,OAFJ,kBAMJC,IAAMO,IAAI,iBANN,OAMhBC,EANgB,OAQtBf,EAAS,CACLE,KFFe,cEGfC,QAASY,EAAIC,OAVK,gDAatBhB,EAAS,CACLE,KFNmB,oBERD,yDAAN,uDCAXe,EAAa,yDAAM,WAAMjB,GAAN,eAAAY,EAAA,6DACzBC,aAAaP,OACZD,EAAaQ,aAAaP,OAFF,kBAMNC,IAAMO,IAAI,mBANJ,OAMlBC,EANkB,OAQxBf,EAAS,CACLE,KHlBiB,gBGmBjBC,QAASY,EAAIC,OAVO,gDAaxBhB,EAAS,CACLE,KHtBqB,sBGQD,yDAAN,uDCyIXf,G,MAAAA,aALS,SAAAC,GAAK,MAAK,CAC9B8B,SAAU9B,EAAM8B,SAChBC,WAAY/B,EAAM+B,cAGkB,CAACC,YF7Dd,kBAAM,SAAApB,GAC7BA,EAAS,CACLE,KF3D0B,uBE6D9BF,EAAS,CACLE,KFtEmB,kBI8H2BmB,cD5DzB,kBAAM,SAAArB,GAC/BA,EAAS,CACLE,KH/EqB,kBGiFzBF,EAAS,CACLE,KHvFqB,qBI8Idf,EA/IA,SAAC,GAKN,IAAD,IAHG+B,SAAYI,EAGf,EAHeA,oBAAqBC,EAGpC,EAHoCA,YAAoBH,GAGxD,EAHiDI,KAGjD,EAHwDJ,aAGxD,IAFGD,WAAaM,EAEhB,EAFgBA,sBAA+CJ,GAE/D,EAFuCK,cAEvC,EAFsDC,OAEtD,EAF+DN,eAI1DO,EACF,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMjC,UAAU,WAAWkC,GAAG,gBAA9B,OACI,yBAAKlC,UAAU,cAAcmC,MAAO,CAACC,MAAO,UAAWC,IAAKC,EAAQ,OAExE,4BAAQtC,UAAU,iBAAiBO,KAAK,SAASgC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QACzIC,aAAW,qBACP,0BAAM3C,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BD,GAAG,aACzC,wBAAIC,UAAU,sBACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMkC,GAAG,YAAYlC,UAAU,YAA/B,YAEJ,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMkC,GAAG,eAAelC,UAAU,aAAlC,iBAGJ,wBAAIA,UAAU,mBACV,uBAAGA,UAAU,8BACT4C,QAAUnB,EAAaoB,KAAK,IAChC,uBAAG7C,UAAU,wBAAyB,IACtC,6CAMd8C,EACF,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAM9C,UAAU,WAAWkC,GAAG,cAA9B,OACI,yBAAKlC,UAAU,cAAcmC,MAAO,CAACC,MAAO,UAAWC,IAAKC,EAAQ,OAExE,4BAAQtC,UAAU,iBAAiBO,KAAK,SAASgC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QACzIC,aAAW,qBACP,0BAAM3C,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BD,GAAG,aACzC,wBAAIC,UAAU,sBACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMkC,GAAG,aAAalC,UAAU,aAAhC,cAEJ,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMkC,GAAG,YAAYlC,UAAU,YAA/B,YAEJ,wBAAIA,UAAU,4BACV,kBAAC,IAAD,CAAMA,UAAU,2BAA2BD,GAAG,yBAAyBwC,cAAY,WAAWQ,gBAAc,OAAOL,gBAAc,SAAjI,kBAGA,yBAAK1C,UAAU,gBAAgBgD,kBAAgB,0BAC3C,kBAAC,IAAD,CAAMhD,UAAU,gBAAgBkC,GAAG,iBAAgB,uBAAGlC,UAAU,mBAAhE,iBACA,kBAAC,IAAD,CAAMA,UAAU,gBAAgBkC,GAAG,kBAAiB,uBAAGlC,UAAU,sBAAjE,kBACA,kBAAC,IAAD,CAAMA,UAAU,gBAAgBkC,GAAG,mBAAnC,IAAsD,uBAAGlC,UAAU,qBAAnE,qBAGR,wBAAIA,UAAU,mBACN,uBAAGA,UAAU,8BACT4C,QAAUlB,EAAemB,KAAK,IAClC,uBAAG7C,UAAU,wBAAyB,IACtC,6CAMlBiD,EACF,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMjD,UAAU,WAAWkC,GAAG,KAA9B,OACQ,yBAAKlC,UAAU,cAAcmC,MAAO,CAACC,MAAO,UAAWC,IAAKC,EAAQ,OAE5E,4BAAQtC,UAAU,iBAAiBO,KAAK,SAASgC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QACzIC,aAAW,qBACP,0BAAM3C,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BD,GAAG,aAC7C,wBAAIC,UAAU,sBACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMkC,GAAG,YAAYlC,UAAU,YAA/B,YAEJ,wBAAIA,UAAU,4BACN,kBAAC,IAAD,CAAMA,UAAU,2BAA2BD,GAAG,yBAAyBwC,cAAY,WAAWQ,gBAAc,OAAOL,gBAAc,SAAjI,UAGA,yBAAK1C,UAAU,gBAAgBgD,kBAAgB,0BAC3C,kBAAC,IAAD,CAAMhD,UAAU,gBAAgBkC,GAAG,cAAa,uBAAGlC,UAAU,iBAA7D,kBACA,kBAAC,IAAD,CAAMA,UAAU,gBAAgBkC,GAAG,gBAAe,uBAAGlC,UAAU,mBAA/D,sBAGZ,wBAAIA,UAAU,4BACN,kBAAC,IAAD,CAAMA,UAAU,2BAA2BD,GAAG,yBAAyBwC,cAAY,WAAWQ,gBAAc,OAAOL,gBAAc,SAAjI,YAGA,yBAAK1C,UAAU,gBAAgBgD,kBAAgB,0BAC3C,kBAAC,IAAD,CAAMhD,UAAU,gBAAgBkC,GAAG,iBAAgB,uBAAGlC,UAAU,iBAAhE,qBACA,kBAAC,IAAD,CAAMA,UAAU,gBAAgBkC,GAAG,mBAAkB,uBAAGlC,UAAU,mBAAlE,4BAQ5B,OACI,yBAAKA,UAAU,oEACX,yBAAKA,UAAU,aAEH2B,GAAuBG,EACnB,kBAAC,WAAD,MAEKF,GACG,kBAAC,WAAD,KAEQD,EAAsBM,EAAgBa,IAMtDG,QCtDbzD,eALS,SAACC,GAAD,MAAY,CAClCqC,sBAAuBrC,EAAM+B,WAAWM,sBACxCH,oBAAqBlC,EAAM8B,SAASI,uBAGvBnC,EAzEC,SAAC,GAAoD,IAAlDsC,EAAiD,EAAjDA,sBAAuBH,EAA0B,EAA1BA,oBACxC,OAAIG,EACK,kBAAC,IAAD,CAAUI,GAAG,eACXP,EACF,kBAAC,IAAD,CAAUO,GAAG,iBAIpB,kBAAC,WAAD,KACE,6BAASnC,GAAG,WACV,yBAAKC,UAAU,aACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,gBAAd,2BACA,wBAAIA,UAAU,gBAAd,aACY,0BAAMA,UAAU,aAAhB,kBAGd,yBAAKA,UAAU,UACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,qBACZ,gDAEF,uBAAGA,UAAU,oBAAb,mMAMA,kBAAC,IAAD,CACEkC,GAAG,kBACH3B,KAAK,SACLP,UAAU,qBAHZ,YAQF,yBAAKA,UAAU,eACb,wBAAIA,UAAU,oBACZ,8CAEF,uBAAGA,UAAU,4BAAb,yNAMA,kBAAC,IAAD,CAAMkC,GAAG,gBAAgBlC,UAAU,6BAAnC,aAKJ,6BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKqC,IAAKC,EAAQ,UAIxB,kC,sBCsBO9C,eAJS,SAAAC,GAAK,MAAK,CAC9BkC,oBAAqBlC,EAAM8B,SAASI,uBAGA,CAACuB,MJxBpB,SAACC,EAAOC,GAAR,8CAAqB,WAAO/C,GAAP,qBAAAY,EAAA,6DAChCoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAGlBwC,EAAOC,KAAKC,UAAU,CAAEL,QAAOC,aANC,kBAQhBxC,IAAM6C,KAAK,gBAAiBH,EAAMD,GARlB,OAQ5BjC,EAR4B,OAUlCf,EAAS,CACLE,KFlDsB,qBEmDtBC,QAASY,EAAIC,OAEjBhB,EAASW,KAdyB,mDAgB5B0C,EAAS,KAAIC,SAAStC,KAAKqC,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAIxD,EAASF,EAAS0D,EAAM3D,IAAK,cAGzDG,EAAS,CACLE,KF5DmB,oBEsCW,0DAArB,wDIwBNf,EAjFG,SAAC,GAAoC,IAAlC0D,EAAiC,EAAjCA,MAAOvB,EAA0B,EAA1BA,oBAA0B,EAClBmC,mBAAS,CACrCX,MAAO,GACPC,SAAU,KAHoC,mBAC3CW,EAD2C,KACjCC,EADiC,KAM3Cb,EAAmBY,EAAnBZ,MAAOC,EAAYW,EAAZX,SACRa,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAExBC,EAAQ,uCAAG,WAAMJ,GAAN,SAAAjD,EAAA,sDACbiD,EAAEK,iBACFrB,EAAMC,EAAMC,GAFC,2CAAH,sDAMd,OAAGzB,EACQ,kBAAC,IAAD,CAAUO,GAAG,cAIpB,kBAAC,WAAD,KACI,6BAASnC,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,+CAA6B,IAC7B,uBAAGA,UAAU,yBAGrB,0BAAMsE,SAAU,SAAAJ,GAAC,OAAII,EAASJ,KAC1B,yBAAKlE,UAAU,cACf,2BAAOA,UAAU,QAAQwE,IAAI,sBAA7B,iBACA,2BACIjE,KAAK,QACLP,UAAU,eACVyE,YAAY,4BACZL,KAAK,QACLC,MAAOlB,EACPc,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,IAEZ,2BAAO3E,GAAG,YAAYC,UAAU,wBAAhC,mDAEA,yBAAKA,UAAU,cACf,2BAAOA,UAAU,QAAQwE,IAAI,yBAA7B,YACA,2BACIjE,KAAK,WACLP,UAAU,eACVyE,YAAY,uBACZL,KAAK,WACLO,UAAU,IACVN,MAAOjB,EACPa,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,2BAAO3D,KAAK,SAASP,UAAU,eAAeqE,MAAM,WACpD,iCAAO,IACP,kBAAC,IAAD,CAAMnC,GAAG,KAAT,2BAGR,yBAAKlC,UAAU,YACX,yBAAKqC,IAAKC,EAAQ,KAA6BsC,IAAI,GAAG5E,UAAU,0BCiB7ER,eAJS,SAAAC,GAAK,MAAK,CAC9BqC,sBAAuBrC,EAAM+B,WAAWM,yBAGJ,CAACoB,MJvBpB,SAACC,EAAOC,GAAR,8CAAqB,WAAO/C,GAAP,qBAAAY,EAAA,6DAChCoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAGlBwC,EAAOC,KAAKC,UAAU,CAAEL,QAAOC,aANC,kBAQhBxC,IAAM6C,KAAK,kBAAmBH,EAAMD,GARpB,OAQ5BjC,EAR4B,OAUlCf,EAAS,CACLE,KHnEwB,uBGoExBC,QAASY,EAAIC,OAEjBhB,EAASiB,KAdyB,mDAgB5BoC,EAAS,KAAIC,SAAStC,KAAKqC,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAIxD,EAASF,EAAS0D,EAAM3D,IAAK,cAGzDG,EAAS,CACLE,KH7EqB,sBGuDS,0DAArB,wDIuBNf,EAjFK,SAAC,GAAsC,IAApC0D,EAAmC,EAAnCA,MAAOpB,EAA4B,EAA5BA,sBAA4B,EACtBgC,mBAAS,CACrCX,MAAO,GACPC,SAAU,KAHwC,mBAC/CW,EAD+C,KACrCC,EADqC,KAM/Cb,EAAmBY,EAAnBZ,MAAOC,EAAYW,EAAZX,SACRa,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAExBC,EAAQ,uCAAG,WAAMJ,GAAN,SAAAjD,EAAA,sDACbiD,EAAEK,iBACFrB,EAAMC,EAAMC,GAFC,2CAAH,sDAMd,OAAGtB,EACQ,kBAAC,IAAD,CAAUI,GAAG,eAIpB,kBAAC,WAAD,KACI,6BAASnC,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,kDACA,uBAAGA,UAAU,yBAGrB,0BAAMsE,SAAU,SAAAJ,GAAC,OAAII,EAASJ,KAC1B,yBAAKlE,UAAU,cACf,2BAAOA,UAAU,QAAQwE,IAAI,sBAA7B,iBACA,2BACIjE,KAAK,QACLP,UAAU,eACVyE,YAAY,4BACZL,KAAK,QACLC,MAAOlB,EACPc,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,IAEZ,2BAAO3E,GAAG,YAAYC,UAAU,wBAAhC,mDAEA,yBAAKA,UAAU,cACf,2BAAOA,UAAU,QAAQwE,IAAI,yBAA7B,YACA,2BACIjE,KAAK,WACLP,UAAU,eACVyE,YAAY,uBACZL,KAAK,WACLO,UAAU,IACVN,MAAOjB,EACPa,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,2BAAO3D,KAAK,SAASP,UAAU,eAAeqE,MAAM,WACpD,iCAAO,IACP,kBAAC,IAAD,CAAMnC,GAAG,KAAT,2BAGR,yBAAKlC,UAAU,YACX,yBAAKqC,IAAKC,EAAQ,KAA0BsC,IAAI,GAAG5E,UAAU,0BCkE1ER,eAJS,SAACC,GAAD,MAAY,CAClCqC,sBAAuBrC,EAAM+B,WAAWM,yBAGF,CAAE3B,WAAU0E,SLrG5B,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAMjB,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAM/C,GAAN,qBAAAY,EAAA,6DAC7CoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAGlBwC,EAAOC,KAAKC,UAAU,CAAEY,OAAMjB,QAAOC,aANQ,kBAQ7BxC,IAAM6C,KAAK,eAAgBH,EAAMD,GARJ,OAQzCjC,EARyC,OAS/C0D,QAAQC,IAAI3D,GAEZf,EAAS,CACLE,KH3C2B,0BG4C3BC,QAASY,EAAIC,OAEjBhB,EAASiB,KAfsC,mDAiBzCoC,EAAS,KAAIC,SAAStC,KAAKqC,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAIxD,EAASF,EAAS0D,EAAM3D,IAAK,cAGzDG,EAAS,CACLE,KHrDwB,yBG8BmB,0DAA/B,wDKqGTf,EAjIQ,SAAC,GAAmD,IAAjDW,EAAgD,EAAhDA,SAAU0E,EAAsC,EAAtCA,SAAU/C,EAA4B,EAA5BA,sBAA4B,EACxCgC,mBAAS,CACvCM,KAAM,GACNjB,MAAO,GACPC,SAAU,GACV4B,UAAW,KAL2D,mBACjEjB,EADiE,KACvDC,EADuD,KAQhEI,EAAqCL,EAArCK,KAAMjB,EAA+BY,EAA/BZ,MAAOC,EAAwBW,EAAxBX,SAAU4B,EAAcjB,EAAdiB,UACzBf,EAAW,SAACC,GAAD,OACfF,EAAY,2BACPD,GADM,kBAERG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAExBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAjD,EAAA,sDACfiD,EAAEK,iBACEnB,IAAa4B,EACf7E,EAAS,wBAAyB,UAElC0E,EAAS,CAAET,OAAMjB,QAAOC,aALX,2CAAH,sDAQd,OAAItB,EACK,kBAAC,IAAD,CAAUI,GAAG,eAIpB,kBAAC,WAAD,KACE,6BAASnC,GAAG,UACV,yBAAKC,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,4BACE,0CACA,uBAAGA,UAAU,qBAGjB,0BAAMsE,SAAU,SAACJ,GAAD,OAAOI,EAASJ,KAC9B,yBAAKlE,UAAU,cACb,2BAAOA,UAAU,QAAQwE,IAAI,sBAA7B,iBAGA,2BACEjE,KAAK,QACLP,UAAU,eACVyE,YAAY,4BACZL,KAAK,QACLC,MAAOlB,EACPc,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,2BAAOnE,GAAG,YAAYC,UAAU,wBAAhC,iBACiB,IACf,uBACE6C,KAAK,2BACLsB,OAAO,SACPc,IAAI,uBAHN,WAKW,KACN,IARP,yDAYF,yBAAKjF,UAAU,cACb,2BAAOA,UAAU,QAAQwE,IAAI,sBAA7B,aAGA,2BACEjE,KAAK,OACLP,UAAU,eACVyE,YAAY,wBACZL,KAAK,OACLC,MAAOD,EACPH,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKlE,UAAU,cACb,2BAAOA,UAAU,QAAQwE,IAAI,yBAA7B,YAGA,2BACEjE,KAAK,WACLP,UAAU,eACVyE,YAAY,kBACZL,KAAK,WACLC,MAAOjB,EACPa,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,yBAAKlE,UAAU,cACb,2BAAOA,UAAU,QAAQwE,IAAI,yBAA7B,oBAGA,2BACEjE,KAAK,WACLP,UAAU,eACVyE,YAAY,6BACZL,KAAK,YACLC,MAAOW,EACPf,SAAU,SAACC,GAAD,OAAOD,EAASC,OAG9B,2BAAO3D,KAAK,SAASP,UAAU,eAAeqE,MAAM,cAGxD,yBAAKrE,UAAU,YACb,yBACEA,UAAU,gBACVqC,IAAKC,EAAQ,KACbsC,IAAI,aCHLpF,eAJQ,SAAAC,GAAK,MAAK,CAC7BkC,oBAAqBlC,EAAM8B,SAASI,uBAGA,CAACxB,WAAU0E,SP9E3B,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAMjB,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAM/C,GAAN,qBAAAY,EAAA,6DAC7CoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAGlBwC,EAAOC,KAAKC,UAAU,CAAEY,OAAMjB,QAAOC,aANQ,kBAQ7BxC,IAAM6C,KAAK,cAAeH,EAAMD,GARH,OAQzCjC,EARyC,OAU/Cf,EAAS,CACLE,KF1ByB,wBE2BzBC,QAASY,EAAIC,OAEjBhB,EAASW,KAdsC,mDAgBzC0C,EAAS,KAAIC,SAAStC,KAAKqC,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAIxD,EAASF,EAAS0D,EAAM3D,IAAK,cAGzDG,EAAS,CACLE,KFpCsB,uBEcqB,0DAA/B,wDO8ETf,EAzGM,SAAC,GAAiD,IAA/CW,EAA8C,EAA9CA,SAAU0E,EAAoC,EAApCA,SAAUlD,EAA0B,EAA1BA,oBAA0B,EAClCmC,mBAAS,CACrCM,KAAM,GACNjB,MAAO,GACPC,SAAU,GACV4B,UAAW,KALmD,mBAC3DjB,EAD2D,KACjDC,EADiD,KAQ3DI,EAAoCL,EAApCK,KAAMjB,EAA8BY,EAA9BZ,MAAOC,EAAuBW,EAAvBX,SAAU4B,EAAajB,EAAbiB,UACxBf,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAExBC,EAAQ,uCAAG,WAAMJ,GAAN,SAAAjD,EAAA,sDACbiD,EAAEK,iBACCnB,IAAa4B,EACZ7E,EAAS,wBAAyB,UAElC0E,EAAS,CAAET,OAAMjB,QAAOC,aALf,2CAAH,sDAQd,OAAGzB,EACQ,kBAAC,IAAD,CAAUO,GAAG,iBAIpB,kBAAC,WAAD,KACI,6BAASnC,GAAG,UACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACf,4BAAI,yCACA,uBAAGA,UAAU,mBAGjB,0BAAMsE,SAAU,SAAAJ,GAAC,OAAII,EAASJ,KAC1B,yBAAKlE,UAAU,cACf,2BAAOA,UAAU,QAAQwE,IAAI,sBAA7B,iBACA,2BACIjE,KAAK,QACLP,UAAU,eACVyE,YAAY,4BACZL,KAAK,QACLC,MAAOlB,EACPc,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE5B,2BAAOnE,GAAG,YAAYC,UAAU,wBAAhC,kBAAsE,uBAAG6C,KAAK,2BAA2BsB,OAAO,SAASc,IAAI,uBAAvD,aAAtE,0DAEA,yBAAKjF,UAAU,cACf,2BAAOA,UAAU,QAAQwE,IAAI,sBAA7B,aACA,2BACIjE,KAAK,OACLP,UAAU,eACVyE,YAAY,wBACZL,KAAK,OACLC,MAAOD,EACPH,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,yBAAKlE,UAAU,cACf,2BAAOA,UAAU,QAAQwE,IAAI,yBAA7B,YACA,2BACIjE,KAAK,WACLP,UAAU,eACVyE,YAAY,kBACZL,KAAK,WACLC,MAAOjB,EACPa,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,yBAAKlE,UAAU,cACf,2BAAOA,UAAU,QAAQwE,IAAI,yBAA7B,oBACA,2BACIjE,KAAK,WACLP,UAAU,eACVyE,YAAY,6BACZL,KAAK,YACLC,MAAOW,EACPf,SAAU,SAAAC,GAAC,OAAID,EAASC,OAG5B,2BAAO3D,KAAK,SAASP,UAAU,eAAeqE,MAAM,cAG5D,yBAAKrE,UAAU,YACX,yBAAKA,UAAU,gBAAgBqC,IAAKC,EAAQ,KAAoCsC,IAAI,aC5FjG,oBACb,kBAAC,WAAD,KACE,yBAAK5E,UAAU,qCACb,yBAAKmC,MAAO,CACRC,MAAO,OACP8C,OAAQ,OACRC,UAAW,SAEbnF,UAAU,2BACVoF,KAAK,UACL,0BAAMpF,UAAU,WAAhB,kB,iBCKKqF,EAAoB,yDAAM,WAAMhF,GAAN,eAAAY,EAAA,+EAEbL,IAAMO,IAAI,mBAFG,OAEzBC,EAFyB,OAG/Bf,EAAS,CACLE,KXVe,cWWfC,QAASY,EAAIC,OALc,gDAQ/BhB,EAAS,CACLE,KXViB,gBWWjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAVnC,yDAAN,uDAiCpBC,EAAiB,SAAAC,GAAQ,8CAAI,WAAMpF,GAAN,eAAAY,EAAA,+EAEhBL,IAAMO,IAAN,8BAAiCsE,IAFjB,OAE5BrE,EAF4B,OAGlCf,EAAS,CACLE,KX1CqB,oBW2CrBC,QAASY,EAAIC,OALiB,gDAQlChB,EAAS,CACLE,KX3CiB,gBW4CjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAVhC,yDAAJ,uDAgBzBG,EAAgB,SAAC3B,EAAU4B,GAAX,IAAoBC,EAApB,sGAAmC,WAAMvF,GAAN,mBAAAY,EAAA,sEAElDoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAJgC,SAOtCF,IAAM6C,KAAK,cAAeM,EAAUV,GAPE,OAOlDjC,EAPkD,OAQxDf,EAAS,CACLE,KXhEe,cWiEfC,QAASY,EAAIC,OAEjBhB,EAASF,EAASyF,EAAO,kBAAoB,kBAAmB,YAE5DA,GACAD,EAAQE,KAAK,cAfuC,mDAkBlDnC,EAAS,KAAIC,SAAStC,KAAKqC,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAIxD,EAASF,EAAS0D,EAAM3D,IAAK,cAGzDG,EAAS,CACLE,KX1EiB,gBW2EjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAzBV,0DAAnC,uDCXd/F,cAAQ,KAAM,CAACsG,iBDmGE,SAAAC,GAAM,8CAAI,WAAM1F,GAAN,eAAAY,EAAA,+EAEhBL,IAAMoF,OAAN,iCAAuCD,IAFvB,OAE5B3E,EAF4B,OAGlCf,EAAS,CACLE,KXhJkB,iBWiJlBC,QAASY,EAAIC,OAEjBhB,EAASF,EAAS,qBAAsB,YAPN,gDASlCE,EAAU,CACNE,KXpJiB,gBWqJjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXhC,yDAAJ,wDCnGvB/F,EAjDI,SAAC,GAAoC,IAAnCyG,EAAkC,EAAlCA,WAAYH,EAAsB,EAAtBA,iBACvBI,EAAcD,EAAWpG,KAAI,SAAAsG,GAAG,OAClC,wBAAIrG,IAAKqG,EAAIpG,IACT,4BAAKoG,EAAIC,SACT,4BAAKD,EAAIE,UACT,4BACI,kBAAC,IAAD,CAAQC,OAAO,cAAcH,EAAII,MADrC,MACuD,IACvC,OAAXJ,EAAIjE,GACD,MAEA,kBAAC,IAAD,CAAQoE,OAAO,cAAcH,EAAIjE,KAGzC,4BACI,4BACIU,QAAS,kBAAMkD,EAAiBK,EAAIK,MACpCjG,KAAK,SACLP,UAAU,kBAHd,UAQZ,OACI,kBAAC,WAAD,KACI,yBAAKA,UAAU,kBACX,wBAAIyG,MAAM,eAAc,2DACpB,6BACA,yBAAKA,MAAM,gBACP,2BAAOA,MAAM,SACb,4BACI,wCACA,uCACA,qCACA,8BAEHP,KAIb,iCCUG1G,cAAQ,KAAM,CAACkH,gBFmHC,SAAAC,GAAM,8CAAI,WAAMtG,GAAN,eAAAY,EAAA,+EAEfL,IAAMoF,OAAN,gCAAsCW,IAFvB,OAE3BvF,EAF2B,OAGjCf,EAAS,CACLE,KXhKkB,iBWiKlBC,QAASY,EAAIC,OAEjBhB,EAASF,EAAS,oBAAqB,YAPN,gDASjCE,EAAU,CACNE,KXpKiB,gBWqKjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXjC,yDAAJ,wDEnHtB/F,EAjDG,SAAC,GAAkC,IAAjCoH,EAAgC,EAAhCA,UAAWF,EAAqB,EAArBA,gBACrBG,EAAaD,EAAU/G,KAAI,SAAAiH,GAAG,OAChC,wBAAIhH,IAAKgH,EAAI/G,IACT,4BAAK+G,EAAIC,QACT,4BAAKD,EAAIE,QACT,4BACI,kBAAC,IAAD,CAAQV,OAAO,cAAcQ,EAAIP,MADrC,MACuD,IACvC,OAAXO,EAAI5E,GACD,MAEA,kBAAC,IAAD,CAAQoE,OAAO,cAAcQ,EAAI5E,KAGzC,4BACI,4BACIU,QAAS,kBAAM8D,EAAgBI,EAAIN,MACnCjG,KAAK,SACLP,UAAU,kBAHd,UAQZ,OACI,kBAAC,WAAD,KACI,yBAAKA,UAAU,kBACX,wBAAIyG,MAAM,eAAc,0DACpB,6BACA,yBAAKA,MAAM,gBACP,2BAAOA,MAAM,SACb,4BACI,sCACA,sCACA,qCACA,8BAEHI,KAIb,iCCyDGrH,cAAQ,KAARA,EAjGC,SAAC,GAAe,IAAdyH,EAAa,EAAbA,QAAa,EAEFnD,mBAAS,IAFP,mBAEpBO,EAFoB,KAEd6C,EAFc,KAIrBC,EAAYF,EAAQpH,KAAI,SAAAuH,GAAG,OAC7B,kBAAC,WAAD,CAAUtH,IAAKsH,EAAIZ,KACf,wBAAIxG,UAAU,iBAAgB,gCAASoH,EAAIC,cAC3C,uBAAGrH,UAAU,aAAY,kDAAwBoH,EAAIE,aACrD,uBAAGtH,UAAU,cAAa,yCAAuBoH,EAAIG,KACrD,uBAAGvH,UAAU,cAAa,4CAA0BoH,EAAI7B,QACxD,uBAAGvF,UAAU,cAAa,0CAAuB,kBAAC,IAAD,CAAQsG,OAAO,cAAcc,EAAII,OAClF,uBAAGxH,UAAU,cAAa,gDAA8BoH,EAAIK,eAG9DC,EAAWT,EAAQpH,KAAI,SAAA8H,GAAG,OAC5B,wBAAI7H,IAAK6H,EAAInB,KACT,4BAAKmB,EAAIF,WACT,4BAAKE,EAAIN,aACT,4BACI,kBAAC,IAAD,CAAQf,OAAO,cAAcqB,EAAIH,OAErC,4BACA,4BACI5E,QAAS,kBAAMsE,EAASS,EAAInB,MAC5BjG,KAAK,SACLP,UAAU,eACVuC,cAAY,QAAQC,cAAY,iBAJpC,QAOI,yBAAKxC,UAAU,cAAcD,GAAG,eAAeqF,KAAK,SAASpC,kBAAgB,oBAAoB4E,cAAY,QACzG,yBAAK5H,UAAU,8DACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,cAAcD,GAAG,qBAA/B,mBACA,4BAAQQ,KAAK,SAASP,UAAU,QAAQ6H,eAAa,QAAQlF,aAAW,SACpE,0BAAMiF,cAAY,QAAlB,UAGR,yBAAK5H,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,6BAEPmH,EAAUtH,KAAI,SAAAiI,GAAK,OAAIzD,IAAUyD,EAAMhI,IACnCgI,EAAMC,MAAMC,SAAW,QAIvC,yBAAKhI,UAAU,0BACX,uBAAGA,UAAU,cAAa,iDAA+B2H,EAAIM,iBAK7E,yBAAKjI,UAAU,gBACX,4BAAQO,KAAK,SAASP,UAAU,eAAe6H,eAAa,SAA5D,kBAS5B,OACI,kBAAC,WAAD,KACI,yBAAK7H,UAAU,kBACX,wBAAIA,UAAU,eAAc,wDACxB,6BACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,gBACX,2BAAOA,UAAU,SACb,+BACI,4BACI,0CACA,8CACA,oCACA,+BAGZ,+BACK0H,OAMrB,iC,QC0EGQ,EAnKD,SAAC,GAAe,IAAdjB,EAAa,EAAbA,QAAa,EACSnD,mBAAS,IADlB,mBAClBqE,EADkB,KACPC,EADO,KAwHzB,OAJAC,qBAAU,YAjHI,WACV,IAAMC,EAAc,GACdC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GACPC,EAAM,CAAC,GAEbjC,EAAQrD,SAAQ,SAAAwD,GACZ,OAAqC,IAAlC,IAAI+B,KAAK/B,EAAII,MAAM4B,WACXb,EAAI1C,KAAK0C,EAAI,GAAG,GACiB,IAAlC,IAAIY,KAAK/B,EAAII,MAAM4B,WAClBZ,EAAI3C,KAAK2C,EAAI,GAAG,GACiB,IAAlC,IAAIW,KAAK/B,EAAII,MAAM4B,WAClBX,EAAI5C,KAAK4C,EAAI,GAAG,GACiB,IAAlC,IAAIU,KAAK/B,EAAII,MAAM4B,WAClBV,EAAI7C,KAAK6C,EAAI,GAAG,GACiB,IAAlC,IAAIS,KAAK/B,EAAII,MAAM4B,WAClBT,EAAI9C,KAAK8C,EAAI,GAAG,GACiB,IAAlC,IAAIQ,KAAK/B,EAAII,MAAM4B,WAClBR,EAAI/C,KAAK+C,EAAI,GAAG,GACiB,IAAlC,IAAIO,KAAK/B,EAAII,MAAM4B,WAClBP,EAAIhD,KAAKgD,EAAI,GAAG,GACiB,IAAlC,IAAIM,KAAK/B,EAAII,MAAM4B,WAClBN,EAAIjD,KAAKiD,EAAI,GAAG,GACiB,IAAlC,IAAIK,KAAK/B,EAAII,MAAM4B,WAClBL,EAAIlD,KAAKkD,EAAI,GAAG,GACiB,IAAlC,IAAII,KAAK/B,EAAII,MAAM4B,WAClBJ,EAAInD,KAAKmD,EAAI,GAAG,GACiB,KAAlC,IAAIG,KAAK/B,EAAII,MAAM4B,WAClBH,EAAIpD,KAAKoD,EAAI,GAAG,GACiB,KAAlC,IAAIE,KAAK/B,EAAII,MAAM4B,WAClBF,EAAIrD,KAAKqD,EAAI,GAAG,QADpB,KAMX,IAAIG,EAAUd,EAAIe,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGhB,EAAI,IACzCiB,EAAUhB,EAAIc,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGf,EAAI,IACzCiB,EAAUhB,EAAIa,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGd,EAAI,IACzCiB,EAAUhB,EAAIY,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGb,EAAI,IACzCiB,EAAUhB,EAAIW,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGZ,EAAI,IACzCiB,EAAUhB,EAAIU,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGX,EAAI,IACzCiB,EAAUhB,EAAIS,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGV,EAAI,IACzCiB,EAAUhB,EAAIQ,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGT,EAAI,IACzCiB,EAAUhB,EAAIO,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGR,EAAI,IACzCiB,EAAUhB,EAAIM,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGP,EAAI,IACzCiB,EAAUhB,EAAIK,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGN,EAAI,IACzCiB,EAAUhB,EAAII,QAAQ,SAACrI,EAAGsI,GAAJ,OAAUtI,EAAEsI,IAAGL,EAAI,IAE7CZ,EAAYzC,KAAKwD,GACjBf,EAAYzC,KAAK2D,GACjBlB,EAAYzC,KAAK4D,GACjBnB,EAAYzC,KAAK6D,GACjBpB,EAAYzC,KAAK8D,GACjBrB,EAAYzC,KAAK+D,GACjBtB,EAAYzC,KAAKgE,GACjBvB,EAAYzC,KAAKiE,GACjBxB,EAAYzC,KAAKkE,GACjBzB,EAAYzC,KAAKmE,GACjB1B,EAAYzC,KAAKoE,GACjB3B,EAAYzC,KAAKqE,GAEjBpF,QAAQC,IAAIuD,GAEZF,EAAa,CACT+B,OAAQ,CACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAERC,SAAU,CACN,CACIC,MAAO,oBACPhJ,KAAMiH,EACNgC,YAAa,CACT,WAEJC,iBAAkB,CACd,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJC,YAAa,MAMzBC,KACD,IAGC,kBAAC,WAAD,KACI,yBAAKzK,UAAU,cACC,kBAAC,IAAD,CACIqB,KAAM8G,EACNuC,QAAS,CACLC,MAAO,CAAEC,KAAM,0BAA2BC,SAAS,GACnDV,OAAQ,CACJ,UAAa,UACb,WAAc,QAElBW,OAAQ,CACRC,MAAO,CACH,CACAC,MAAO,CACHC,UAAU,EACVC,cAAe,GACfC,aAAa,GAEjBC,UAAW,CACPP,SAAS,KAIjBQ,MAAO,CACH,CACAD,UAAW,CACPP,SAAS,YCvGtCrL,cAAQ,KAARA,EA1CA,SAAC,GAAuB,IAAtB8L,EAAqB,EAArBA,OAAQrE,EAAa,EAAbA,QACfsE,EAAUD,EAAOzL,KAAI,SAAA2L,GAAG,OAC1B,yBAAKxL,UAAU,QACX,yBAAKA,UAAU,eAAeqC,IAAKmJ,EAAIC,OAAQ7G,IAAI,mBAC/C,yBAAK5E,UAAU,aACX,uBAAGA,UAAU,aAAawL,EAAIZ,MAC9B,uBAAGnE,MAAM,aAAT,YACE,IAAI,kBAAC,IAAD,CAAQH,OAAO,cAAckF,EAAIhE,OAEvC,4BAAKgE,EAAIpH,WAIzB,OACI,kBAAC,WAAD,KACI,yBAAKpE,UAAU,gBACX,yBAAKA,UAAU,kBACf,wBAAIyG,MAAM,eAAc,kDACpB,6BACA,yBAAK1G,GAAG,gBACJ,yBAAK0G,MAAM,UACa,IAAlB6E,EAAO1L,OAAe,iBAAmB2L,KAIvD,yBAAKvL,UAAU,kBACX,wBAAIA,UAAU,eAAc,uDAC5B,6BACA,yBAAKD,GAAG,SACJ,kBAAC,EAAD,CAAOkH,QAASA,OAI5B,iCCsCGzH,eALS,SAAAC,GAAK,MAAK,CAC9B+B,WAAY/B,EAAM+B,WAClBkK,QAASjM,EAAMiM,WAGqB,CAACrG,oBAAmBsG,cNwJ/B,yDAAM,WAAMtL,GAAN,SAAAY,EAAA,0DAC5B2K,OAAOC,QAAQ,yCADa,0CAGjBjL,IAAMoF,OAAO,gBAHI,OAKvB3F,EAAS,CACLE,KX5Na,kBW8NjBF,EAAS,CACLE,KX7Nc,mBWgOlBF,EAASF,EAAS,gCAAiC,YAZ5B,gDAcvBE,EAAU,CACNE,KXpOa,gBWqObC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAhB3C,yDAAN,wDMxJd/F,EAjEG,SAAC,GAKR,IAJH6F,EAIE,EAJFA,kBACAsG,EAGE,EAHFA,cACa3J,EAEX,EAFFR,WAAaQ,OAEX,IADF0J,QAAUA,EACR,EADQA,QAASI,EACjB,EADiBA,QAMvB,OAJIzD,qBAAU,WACNhD,MACD,CAACA,IAEDyG,GAAsB,MAAXJ,EACd,kBAACK,EAAD,MAEA,kBAAC,WAAD,KACQ,6BAAShM,GAAG,aACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,8CACJ,wBAAIA,UAAU,mBAAkB,uBAAGA,UAAU,mBAA7C,YAA4EgC,GAAUA,EAAOoC,OAEjG,6BACa,OAAZsH,EACG,kBAAC,WAAD,KAC0B,OAArBA,EAAQhE,UAAqBgE,EAAQhE,SAAS9H,OAAS,EAEhD,kBAAC,EAAD,CAASqH,QAASyE,EAAQhE,WAE1B,wBAAIvF,MAAO,CAAC6J,MAAO,YAAnB,yBAGR,kBAAC,EAAD,CAAQ/E,QAASyE,EAAQhE,SAAU4D,OAAQI,EAAQJ,SACnD,kBAAC,EAAD,CAAYrF,WAAYyF,EAAQzF,aAChC,kBAAC,EAAD,CAAWW,UAAW8E,EAAQ9E,YAC9B,4BACIhE,QAAS,kBAAM+I,KACfpL,KAAK,SACLP,UAAU,kBAAiB,uBAAGA,UAAU,sBAH5C,uBAOJ,kBAAC,WAAD,KACI,0EACA,kBAAC,IAAD,CAAMkC,GAAG,kBAAkBlC,UAAU,gBAArC,qBAOhB,iCCiEDR,cAAQ,KAAM,CAACyM,aPFF,SAAClI,EAAU4B,GAAX,8CAAuB,WAAMtF,GAAN,mBAAAY,EAAA,sEAErCoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAJmB,SAOzBF,IAAMsL,IAAI,wBAAyBnI,EAAUV,GAPpB,OAOrCjC,EAPqC,OAQ3Cf,EAAS,CACLE,KXvHkB,iBWwHlBC,QAASY,EAAIC,OAEjBhB,EAASF,EAAS,kBAAmB,YACrC2E,QAAQC,IAAIY,GAEZA,EAAQE,KAAK,cAf8B,mDAiBrCnC,EAAS,KAAIC,SAAStC,KAAKqC,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAIxD,EAASF,EAAS0D,EAAM3D,IAAK,cAGzDG,EAAS,CACLE,KXnIiB,gBWoIjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAxBvB,0DAAvB,wDOEb/F,CAA8B2M,aAvHxB,SAAC,GAA6B,IAA5BF,EAA2B,EAA3BA,aAActG,EAAa,EAAbA,QAAa,EACd7B,mBAAS,CACrCiD,OAAQ,GACRC,OAAQ,GACRoF,aAAc,GACd7F,KAAK,GACLrE,GAAG,GACHmK,SAAS,EACTpE,YAAa,KAR6B,mBACvClE,EADuC,KAC7BuI,EAD6B,OAWLxI,oBAAS,GAXJ,mBAWvCyI,EAXuC,KAWvBC,EAXuB,KAavCzF,EAAgEhD,EAAhEgD,OAAQC,EAAwDjD,EAAxDiD,OAAQoF,EAAgDrI,EAAhDqI,aAAc7F,EAAkCxC,EAAlCwC,KAAMrE,EAA4B6B,EAA5B7B,GAAImK,EAAwBtI,EAAxBsI,QAASpE,EAAelE,EAAfkE,YAElDhE,EAAW,SAAAC,GAAC,OAAIoI,EAAY,2BAC3BvI,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAG9B,OACI,kBAAC,WAAD,KACI,6BAAStE,GAAG,SACR,yBAAKC,UAAU,aACP,yBAAKmC,MAAO,CAAC+C,OAAQ,QAASuB,MAAM,eAChC,yBAAKzG,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,iDACA,uBAAGA,UAAU,uBAEjB,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,6DAIJ,0BAAMsE,SAAU,SAAAJ,GACZA,EAAEK,iBACF0H,EAAalI,EAAU4B,KAEvB,qDACA,yBAAK3F,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,WACZL,KAAK,SACLC,MAAO0C,EACP9C,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZ,yBAAK1E,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,4BACZL,KAAK,SACLC,MAAO2C,EACP/C,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZ,yBAAK1E,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,mBACZL,KAAK,eACLC,MAAO+H,EACPnI,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAIZ,yCACA,yBAAK1E,UAAU,cACX,2BAAOO,KAAK,OAAOP,UAAU,eAAeoE,KAAK,OAAOC,MAAOkC,EAAMtC,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEjG,yBAAKlE,UAAU,cACX,2BAAG,2BAAOO,KAAK,WAAW6D,KAAK,UAAUqI,QAASJ,EAAShI,MAAOgI,EAASpI,SAAU,SAAAC,GACjFoI,EAAY,2BAAKvI,GAAN,IAAgBsI,SAAUA,KACrCG,GAAgBD,MAFpB,IAGO,IAHP,oBAKJ,uCACA,yBAAKvM,UAAU,cACX,2BACIO,KAAK,OACLP,UAAU,eACVoE,KAAK,KACLC,MAAOnC,EACP+B,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIwI,SAAUH,EAAiB,WAAa,MAE5E,yBAAKvM,UAAU,cACX,8BACIoE,KAAK,cACLpE,UAAU,eACVyE,YAAY,wBACZJ,MAAO4D,EAAahE,SAAU,SAAAC,GAAC,OAAID,EAASC,MAChD,2BAAOlE,UAAU,aAAjB,wCAEJ,2BAAOO,KAAK,SAASP,UAAU,iBAAkB,IACjD,kBAAC,IAAD,CAAMkC,GAAG,aAAa3B,KAAK,SAASP,UAAU,6BAA9C,YAEJ,8BAEJ,yBAAKA,UAAU,YACX,yBAAKqC,IAAKC,EAAQ,KAA6BsC,IAAI,GAAG5E,UAAU,2BCYjFR,cAAQ,KAAM,CAACmN,cR5BD,SAAC5I,EAAU4B,GAAX,8CAAuB,WAAMtF,GAAN,mBAAAY,EAAA,sEAEtCoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAJoB,SAO1BF,IAAMsL,IAAI,yBAA0BnI,EAAUV,GAPpB,OAOtCjC,EAPsC,OAQ5Cf,EAAS,CACLE,KX5FkB,iBW6FlBC,QAASY,EAAIC,OAEjBhB,EAASF,EAAS,mBAAoB,YACtCwF,EAAQE,KAAK,cAb+B,mDAetCnC,EAAS,KAAIC,SAAStC,KAAKqC,SAE7BA,EAAOE,SAAQ,SAAAC,GAAK,OAAIxD,EAASF,EAAS0D,EAAM3D,IAAK,cAGzDG,EAAS,CACLE,KXtGiB,gBWuGjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAtBtB,0DAAvB,wDQ4Bd/F,CAA+B2M,aAvHxB,SAAC,GAA8B,IAA7BQ,EAA4B,EAA5BA,cAAehH,EAAa,EAAbA,QAAa,EAChB7B,mBAAS,CACrCsC,QAAS,GACTC,SAAU,GACVuG,SAAU,GACVrG,KAAM,GACNrE,GAAI,GACJmK,SAAS,EACTpE,YAAa,KAR+B,mBACzClE,EADyC,KAC/BC,EAD+B,OAWPF,oBAAS,GAXF,mBAWzCyI,EAXyC,KAWzBC,EAXyB,KAazCpG,EAA+DrC,EAA/DqC,QAASC,EAAsDtC,EAAtDsC,SAAUuG,EAA4C7I,EAA5C6I,SAAUrG,EAAkCxC,EAAlCwC,KAAMrE,EAA4B6B,EAA5B7B,GAAImK,EAAwBtI,EAAxBsI,QAASpE,EAAelE,EAAfkE,YAEjDhE,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAE9B,OACI,6BACI,kBAAC,WAAD,KACA,6BAAStE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKmC,MAAO,CAAC+C,OAAQ,QAASuB,MAAM,eAC5B,yBAAKzG,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,mDACA,uBAAGA,UAAU,sBAEjB,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,sEAIJ,0BAAMsE,SAAU,SAAAJ,GACZA,EAAEK,iBACFoI,EAAc5I,EAAU4B,KAExB,qDACA,yBAAK3F,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,aACZL,KAAK,UACLC,MAAO+B,EACPnC,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZ,yBAAK1E,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,aACZL,KAAK,WACLC,MAAOgC,EACPpC,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAGZ,yBAAK1E,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,aACZL,KAAK,WACLC,MAAOuI,EACP3I,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBQ,UAAQ,KAIZ,yCACA,yBAAK1E,UAAU,cACX,2BAAOO,KAAK,OAAOP,UAAU,eAAeoE,KAAK,OAAOC,MAAOkC,EAAMtC,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEjG,yBAAKlE,UAAU,cACX,2BAAG,2BAAOO,KAAK,WAAW6D,KAAK,UAAUqI,QAASJ,EAAShI,MAAOgI,EAASpI,SAAU,SAAAC,GACjFF,EAAY,2BAAKD,GAAN,IAAgBsI,SAAUA,KACrCG,GAAgBD,MAFpB,IAGO,IAHP,iBAKJ,uCACA,yBAAKvM,UAAU,cACX,2BACIO,KAAK,OACLP,UAAU,eACVoE,KAAK,KACLC,MAAOnC,EACP+B,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIwI,SAAUH,EAAiB,WAAa,MAE5E,yBAAKvM,UAAU,cACX,8BACIoE,KAAK,cACLpE,UAAU,eACVyE,YAAY,wBACZJ,MAAO4D,EAAahE,SAAU,SAAAC,GAAC,OAAID,EAASC,MAChD,2BAAOlE,UAAU,aAAjB,oCAEJ,2BAAOO,KAAK,SAASP,UAAU,iBAAkB,IACjD,kBAAC,IAAD,CAAMkC,GAAG,aAAa3B,KAAK,SAASP,UAAU,6BAA9C,YAEJ,8BAEJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gBAAgBqC,IAAKC,EAAQ,KAA+CsC,IAAI,eC+HhHpF,cAAQ,KAAM,CAACkG,iBAAflG,CAA+B2M,aAzOxB,SAAC,GAA+B,IAA7BzG,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,QAAa,EACjB7B,mBAAS,CACrC+I,OAAQ,GACRC,QAAS,GACTF,SAAU,GACVrH,OAAQ,GACRwH,YAAa,GACbC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,UAAW,KAbkC,mBAC1CvJ,EAD0C,KAChCC,EADgC,OAgBAF,oBAAS,GAhBT,mBAgB1CyJ,EAhB0C,KAgBtBC,EAhBsB,KAmB7CX,EAYA9I,EAZA8I,OACAC,EAWA/I,EAXA+I,QACAF,EAUA7I,EAVA6I,SACArH,EASAxB,EATAwB,OACAwH,EAQAhJ,EARAgJ,YACAC,EAOAjJ,EAPAiJ,QACAC,EAMAlJ,EANAkJ,OACAC,EAKAnJ,EALAmJ,IACAC,EAIApJ,EAJAoJ,QACAC,EAGArJ,EAHAqJ,SACAC,EAEAtJ,EAFAsJ,QACAC,EACAvJ,EADAuJ,UAGErJ,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAO9B,OACI,kBAAC,WAAD,KACI,6BAAStE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKmC,MAAO,CAAC+C,OAAQ,QAASuB,MAAM,eAChC,yBAAKzG,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,+CACA,uBAAGA,UAAU,oBAEjB,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,+DAKJ,0BAAMsE,SAAU,SAAAJ,GAAC,OApBxB,SAAAA,GACbA,EAAEK,iBACFmB,EAAc3B,EAAU4B,GAkBiBrB,CAASJ,KAC1B,qDACA,yBAAKlE,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,4DACZL,KAAK,SACLC,MAAOkB,EACPtB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,uDAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,WACZL,KAAK,SACLC,MAAOwI,EACP5I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,8CAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,YACZL,KAAK,cACLC,MAAO0I,EACP9I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,wCAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,WACZL,KAAK,SACLC,MAAO4I,EACPhJ,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,0EAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,YACZL,KAAK,UACLC,MAAO2I,EACP/I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,0EAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,aACZL,KAAK,UACLC,MAAOyI,EACP7I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,2CAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,cACZL,KAAK,WACLC,MAAOuI,EACP3I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,sDAEA,yBAAKA,UAAU,cACX,8BACIA,UAAU,eACVyE,YAAY,4BACZL,KAAK,MACLC,MAAO6I,EACPjJ,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,aAAjB,oCAGJ,yBAAKA,UAAU,QACX,4BAAQ4C,QAAS,kBAAM4K,GAAoBD,IACvChN,KAAK,SAASP,UAAU,6BAD5B,4BAIA,0BAAMA,UAAU,cAAhB,IAA+B,IAA/B,aAIHuN,GACG,kBAAC,WAAD,KACI,6BACI,yBAAKvN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,qBAGrB,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,sBACZL,KAAK,UACLC,MAAO8I,EAASlJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhD,yBAAKlE,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,sBAGrB,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,uBACZL,KAAK,WACLC,MAAO+I,EAAUnJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEjD,yBAAKlE,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,qBAGrB,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,sBACZL,KAAK,UACLC,MAAOgJ,EAASpJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhD,yBAAKlE,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,uBAGrB,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,wBACZL,KAAK,YACLC,MAAOiJ,EAAWrJ,SAAU,SAAAC,GAAC,OAAID,EAASC,SAK9D,2BAAO3D,KAAK,SAASP,UAAU,iBA7JnC,IA6JsD,IAClD,kBAAC,IAAD,CAAMkC,GAAG,aAAalC,UAAU,6BAAhC,YAEJ,8BAEJ,yBAAKA,UAAU,YACX,yBAAKqC,IAAKC,EAAQ,IAA0BsC,IAAI,GAAG5E,UAAU,2BCmC1ER,eAJS,SAAAC,GAAK,MAAK,CAC9BiM,QAASjM,EAAMiM,WAGqB,CAAChG,gBAAeL,qBAAzC7F,CAA6D2M,aA/P/D,SAAC,GAA+E,IAAD,IAA5ET,QAAUA,EAAkE,EAAlEA,QAASI,EAAyD,EAAzDA,QAAUpG,EAA+C,EAA/CA,cAAeL,EAAgC,EAAhCA,kBAAmBM,EAAa,EAAbA,QAAa,EACxD7B,mBAAS,CACrC+I,OAAQ,GACRC,QAAS,GACTF,SAAU,GACVrH,OAAQ,GACRwH,YAAa,GACbC,QAAS,GACTC,OAAQ,GACRC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,UAAW,KAbyE,mBACjFvJ,EADiF,KACvEC,EADuE,OAgBvCF,oBAAS,GAhB8B,mBAgBjFyJ,EAhBiF,KAgB7DC,EAhB6D,KAiBxFnF,qBAAU,WACNhD,IACArB,EAAY,CACR6I,OAAQf,IAAYJ,EAAQmB,OAAS,GAAInB,EAAQmB,OACjDC,QAAShB,IAAYJ,EAAQoB,QAAU,GAAIpB,EAAQoB,QACnDF,SAAUd,IAAYJ,EAAQkB,SAAW,GAAIlB,EAAQkB,SACrDrH,OAAQuG,IAAYJ,EAAQnG,OAAS,GAAImG,EAAQnG,OACjDwH,YAAajB,IAAYJ,EAAQqB,YAAc,GAAIrB,EAAQqB,YAC3DC,QAASlB,IAAYJ,EAAQsB,QAAU,GAAItB,EAAQsB,QACnDC,OAAQnB,IAAYJ,EAAQuB,OAAS,GAAIvB,EAAQuB,OACjDC,IAAKpB,IAAYJ,EAAQwB,IAAM,GAAIxB,EAAQwB,IAC3CC,QAASrB,IAAYJ,EAAQ+B,OAAS,GAAI/B,EAAQ+B,OAAON,QACzDC,SAAUtB,IAAYJ,EAAQ+B,OAAS,GAAI/B,EAAQ+B,OAAOL,SAC1DC,QAASvB,IAAYJ,EAAQ+B,OAAS,GAAI/B,EAAQ+B,OAAOJ,QACzDC,UAAWxB,IAAYJ,EAAQ+B,OAAS,GAAI/B,EAAQ+B,OAAOH,cAEjE,CAACxB,EAASzG,IAjC4E,IAoCpFwH,EAYA9I,EAZA8I,OACAC,EAWA/I,EAXA+I,QACAF,EAUA7I,EAVA6I,SACArH,EASAxB,EATAwB,OACAwH,EAQAhJ,EARAgJ,YACAC,EAOAjJ,EAPAiJ,QACAC,EAMAlJ,EANAkJ,OACAC,EAKAnJ,EALAmJ,IACAC,EAIApJ,EAJAoJ,QACAC,EAGArJ,EAHAqJ,SACAC,EAEAtJ,EAFAsJ,QACAC,EACAvJ,EADAuJ,UAGErJ,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAO9B,OACI,kBAAC,WAAD,KACI,6BAAStE,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKmC,MAAO,CAAC+C,OAAQ,QAASuB,MAAM,eAChC,yBAAKzG,UAAU,aACX,yBAAKA,UAAU,kBACX,4BAAI,gDAA8B,IAC9B,uBAAGA,UAAU,oBAEjB,uBAAGA,UAAU,QACT,uBAAGA,UAAU,gBADjB,+DAKJ,0BAAMsE,SAAU,SAAAJ,GAAC,OApBxB,SAAAA,GACbA,EAAEK,iBACFmB,EAAc3B,EAAU4B,GAkBiBrB,CAASJ,KAC1B,qDACA,yBAAKlE,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,4DACZL,KAAK,SACLC,MAAOkB,EACPtB,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,uDAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,WACZL,KAAK,SACLC,MAAOwI,EACP5I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,8CAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,YACZL,KAAK,cACLC,MAAO0I,EACP9I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,wCAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,WACZL,KAAK,SACLC,MAAO4I,EACPhJ,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,0EAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,YACZL,KAAK,UACLC,MAAO2I,EACP/I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,0EAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,aACZL,KAAK,UACLC,MAAOyI,EACP7I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,2CAEA,yBAAKA,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,cACZL,KAAK,WACLC,MAAOuI,EACP3I,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,wBAAjB,sDAEA,yBAAKA,UAAU,cACX,8BACIA,UAAU,eACVyE,YAAY,4BACZL,KAAK,MACLC,MAAO6I,EACPjJ,SAAU,SAAAC,GAAC,OAAID,EAASC,IAAIQ,UAAQ,IAExC,2BAAO1E,UAAU,aAAjB,oCAGJ,yBAAKA,UAAU,QACX,4BAAQ4C,QAAS,kBAAM4K,GAAoBD,IACvChN,KAAK,SAASP,UAAU,6BAD5B,4BAIA,0BAAMA,UAAU,cAAhB,IAA+B,IAA/B,aAIHuN,GACG,kBAAC,WAAD,KACI,6BACI,yBAAKvN,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,qBAGrB,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,sBACZL,KAAK,UACLC,MAAO8I,EAASlJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhD,yBAAKlE,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,sBAGrB,2BACIO,KAAK,OACLP,UAAU,+BACVyE,YAAY,uBACZL,KAAK,WACLC,MAAO+I,EAAUnJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEjD,yBAAKlE,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,qBAGrB,2BACIO,KAAK,OACLP,UAAU,+BACVyE,YAAY,sBACZL,KAAK,UACLC,MAAOgJ,EAASpJ,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhD,yBAAKlE,UAAU,oBACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,uBAAGA,UAAU,uBAGrB,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,wBACZL,KAAK,YACLC,MAAOiJ,EAAWrJ,SAAU,SAAAC,GAAC,OAAID,EAASC,SAK9D,2BAAO3D,KAAK,SAASP,UAAU,iBA7JnC,IA6JsD,IAClD,kBAAC,IAAD,CAAMkC,GAAG,aAAalC,UAAU,6BAAhC,YAEJ,8BAEJ,yBAAKA,UAAU,YACX,yBAAKqC,IAAKC,EAAQ,IAA0BsC,IAAI,GAAG5E,UAAU,2BCxL1ER,eAJQ,SAAAC,GAAK,MAAK,CAC7B8B,SAAU9B,EAAM8B,YAGL/B,EArDK,SAAC,GASd,IAAD,IARFkM,QAQE,IAPE1J,OAASwE,EAOX,EAPWA,IAAKpC,EAOhB,EAPgBA,KAAMqH,EAOtB,EAPsBA,OACpBoB,EAMF,EANEA,OACAD,EAKF,EALEA,SACAG,EAIF,EAJEA,YACAC,EAGF,EAHEA,QAEJzL,EACE,EADFA,SAGA,OACI,yBAAKmM,cAAc,YACf,yBAAK1N,UAAU,aACP,yBAAKA,UAAU,eACX,yBAAKqC,IAAKoJ,EAAQ7G,IAAI,MAE1B,yBAAK5E,UAAU,mBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,mBAAkB,gCAASoE,IACzC,uBAAGpE,UAAU,aAAY,gCAAS+M,GAAlC,KACA,uBAAG/M,UAAU,cAAa,gCAAS6M,GAAnC,IAAqDD,GACrD,uBAAG5M,UAAU,cAAa,gCAASgN,GAAnC,iCAGR,yBAAKhN,UAAU,2BACVuB,EAASI,oBACN,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMO,GAAE,uBAAkBsE,GAAOjG,KAAK,SAASP,UAAU,yCAAwC,uBAAGA,UAAU,0BAA9G,sBAGA,kBAAC,WAAD,KACI,4BAAQO,KAAK,SAASgC,cAAY,UAAUoL,iBAAe,QAAQhD,MAAM,yBAAyB3K,UAAU,kDACxG,uBAAGA,UAAU,0BADjB,sBAMZ,kBAAC,IAAD,CAAMkC,GAAE,kBAAasE,GAAOjG,KAAK,SAASP,UAAU,yCAApD,sBCSTR,eAJS,SAACC,GAAD,MAAY,CAClCiM,QAASjM,EAAMiM,WAGuB,CAAEkC,YZpBf,yDAAM,WAAMvN,GAAN,eAAAY,EAAA,+EAEPL,IAAMO,IAAI,gBAFH,OAEnBC,EAFmB,OAIzBf,EAAS,CACLE,KXzBgB,eW0BhBC,QAASY,EAAIC,OANQ,gDASzBhB,EAAS,CACLE,KX3BiB,gBW4BjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXzC,yDAAN,wDYoBZ/F,EA9CE,SAAC,GAAqD,IAAnDoO,EAAkD,EAAlDA,YAAkD,IAArClC,QAAWmC,EAA0B,EAA1BA,SAAU/B,EAAgB,EAAhBA,QAKpD,OAJAzD,qBAAU,WACRuF,MACC,CAACA,IAGF,kBAAC,WAAD,KACG9B,EACC,kBAACC,EAAD,MAEA,kBAAC,WAAD,KACE,6BAAShM,GAAG,iBACV,yBAAKC,UAAU,aACb,yBAAKA,UAAU,kBACb,4BACE,qDAGJ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,mBADf,2BAGA,6BACa,MAAZ6N,EACCA,EAAShO,KAAI,SAAC6L,GAAD,OACX,kBAAC,EAAD,CAAa5L,IAAK4L,EAAQlF,IAAKkF,QAASA,OAG1C,0DCiEDoC,EAhGI,SAAC,GAUb,IAAD,IATJpC,QASI,IARF1J,OAAUoC,EAQR,EARQA,KAAMqH,EAQd,EARcA,OAChBoB,EAOE,EAPFA,OACAD,EAME,EANFA,SACAG,EAKE,EALFA,YACAC,EAIE,EAJFA,QACAF,EAGE,EAHFA,QACAW,EAEE,EAFFA,OAGF,OACE,yBAAKzN,UAAU,eACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YAAYqC,IAAKoJ,EAAQ7G,IAAI,MAE9C,yBAAK5E,UAAU,WACb,wBAAIA,UAAU,uBACZ,gCAASoE,IAEX,6BACA,wBAAIpE,UAAU,oBAAoB+M,GAClC,6BACA,uBAAG/M,UAAU,iBACV6M,EADH,KACaD,GAEb,uBAAG5M,UAAU,OACX,gCAASgN,EAAT,KADF,oBAGA,yBAAKhN,UAAU,SACZ8M,GACC,uBACE9M,UAAU,OACV6C,KAAMiK,EACN3I,OAAO,SACPc,IAAI,uBAEJ,uBAAGjF,UAAU,wBAGhByN,GAAUA,EAAON,SAChB,uBACEnN,UAAU,OACV6C,KAAM4K,EAAON,QACbhJ,OAAO,SACPc,IAAI,uBAEJ,uBAAGjF,UAAU,0BAGhByN,GAAUA,EAAOL,UAChB,uBACEpN,UAAU,OACV6C,KAAM4K,EAAOL,SACbjJ,OAAO,SACPc,IAAI,uBAEJ,uBAAGjF,UAAU,kCAGhByN,GAAUA,EAAOH,WAChB,uBACEtN,UAAU,OACV6C,KAAM4K,EAAOH,UACbnJ,OAAO,SACPc,IAAI,uBAEJ,uBAAGjF,UAAU,4BAGhByN,GAAUA,EAAOJ,SAChB,uBACErN,UAAU,OACV6C,KAAM4K,EAAOJ,QACblJ,OAAO,SACPc,IAAI,uBAEJ,uBAAGjF,UAAU,6BAMvB,yBAAKA,UAAU,mBAAf,8BAEE,yBAAKqC,IAAKC,EAAQ,UCzDXyL,EA7BM,SAAC,GAMf,IAAD,IALFrC,QACIwB,EAIF,EAJEA,IACAD,EAGF,EAHEA,OACS7I,EAEX,EAFEpC,OAASoC,KAGb,OACI,kBAAC,WAAD,KACI,yBAAKpE,UAAU,WACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAd,OAAkCoE,EAAK4J,MAAM,KAAK,GAAlD,UACA,uBAAGhO,UAAU,SAASkN,IAE1B,6BACA,yBAAKlN,UAAU,QACX,wBAAIA,UAAU,eAAd,UACA,uBAAGA,UAAU,SAASiN,KAG9B,+BCQGgB,EA3BW,SAAC,GAIpB,IAAD,IAHFhI,WACIG,EAEF,EAFEA,QAASC,EAEX,EAFWA,SAAUuG,EAErB,EAFqBA,SAAUrG,EAE/B,EAF+BA,KAAMrE,EAErC,EAFqCA,GAAI+F,EAEzC,EAFyCA,YAG3C,OACI,kBAAC,WAAD,KACI,yBAAKjI,UAAU,sBACX,wBAAIA,UAAU,aAAY,gCAASoG,IACnC,uBAAGpG,UAAU,SACT,kBAAC,IAAD,CAAQsG,OAAO,cAAcC,GADjC,MAESrE,EAAa,kBAAC,IAAD,CAAQoE,OAAO,cAAcpE,GAArC,OAGd,2BAAG,8CAAH,IAAgCmE,GAChC,2BAAG,8CAAH,IAAgCuG,GAChC,2BAAG,iDAA+B3E,IAEtC,+BCSGiG,EA3BU,SAAC,GAInB,IAAD,IAHFtH,UACIG,EAEF,EAFEA,OAAQC,EAEV,EAFUA,OAAQoF,EAElB,EAFkBA,aAAa7F,EAE/B,EAF+BA,KAAMrE,EAErC,EAFqCA,GAAI+F,EAEzC,EAFyCA,YAG3C,OACI,kBAAC,WAAD,KACI,yBAAKxB,MAAM,sBACP,wBAAIzG,UAAU,aAAY,gCAAS+G,IACnC,uBAAGN,MAAM,SAAQ,kBAAC,IAAD,CAAQH,OAAO,cAAcC,GAA9C,KAESrE,EAAa,kBAAC,IAAD,CAAQoE,OAAO,cAAcpE,GAArC,OAGd,2BAAG,4CAAH,IAA8B8E,GAC9B,2BAAG,oDAAkCoF,GACrC,2BAAG,iDAA+BnE,IAEtC,+BCyBGzI,eAJS,SAAAC,GAAK,MAAK,CAC9B8B,SAAU9B,EAAM8B,YAGoB,CAAC4M,ajBmKb,SAAC1I,EAAU2I,GAAX,8CAAwB,WAAM/N,GAAN,SAAAY,EAAA,+EAErCL,IAAMoF,OAAN,8BAAoCP,EAApC,YAAgD2I,IAFX,OAI5C/N,EAAS,CACLE,KXtLiB,gBWuLjBC,QAAS4N,IAGb/N,EAASF,EAAS,kBAAmB,YATO,gDAW5CE,EAAU,CACNE,KX9LoB,mBW+LpBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAbtB,yDAAxB,wDiBnKb/F,EAzCO,SAAC,GAKhB,IAJHiG,EAIE,EAJFA,SAIE,IAHF6F,OAAU9E,EAGR,EAHQA,IAAKoE,EAGb,EAHaA,KAAMxG,EAGnB,EAHmBA,KAAMqH,EAGzB,EAHyBA,OAAQjE,EAGjC,EAHiCA,KAAM3F,EAGvC,EAHuCA,KACzCN,EAEE,EAFFA,SACA4M,EACE,EADFA,aAGA,OACI,kBAAC,WAAD,KACI,yBAAKnO,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,qBAAqBqC,IAAKoJ,EAAQ7G,IAAI,KACrD,4BAAI,gCAASR,KAEjB,yBAAKpE,UAAU,eACX,2BAAI4K,GACJ,uBAAG5K,UAAU,aAAb,aACgB,kBAAC,IAAD,CAAQsG,OAAO,cAAckB,IAGvB,OAAlBjG,EAASM,MAAiBA,IAASN,EAASM,KAAK2E,KACjD,4BACI5D,QAAS,SAAAsB,GAAC,OAAIiK,EAAa1I,EAAUe,IACrCxG,UAAU,kBAFd,WCSTR,eAAQ,KAAM,CAAC6O,UC1BL,SAAC5I,EAAU1B,GAAX,8CAAwB,WAAM1D,GAAN,iBAAAY,EAAA,6DACvCoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAHqB,kBAOvBF,IAAM6C,KAAN,8BAAkCgC,GAAY1B,EAAUV,GAPjC,OAOnCjC,EAPmC,OASzCf,EAAS,CACLE,K9BWc,a8BVdC,QAASY,EAAIC,KAAKiK,SAGtBjL,EAASF,EAAS,eAAgB,YAdO,gDAgBzCE,EAAU,CACNE,K9BKoB,mB8BJpBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAlBzB,yDAAxB,wDD0BV/F,EA/BI,SAAC,GAA6B,IAA3BiG,EAA0B,EAA1BA,SAAU4I,EAAgB,EAAhBA,UAAgB,EACpBvK,mBAAS,IADW,mBACrC8G,EADqC,KAC/B0D,EAD+B,KAG5C,OACI,kBAAC,WAAD,KACI,yBAAKtO,UAAU,mBACX,0BAAMsE,SAAU,SAAAJ,GACZA,EAAEK,iBACF8J,EAAU5I,EAAU,CAAEmF,SACtB0D,EAAQ,MAER,8BACItO,UAAU,YACVoE,KAAK,OAAOmK,KAAK,KAAKC,KAAK,IAC3B/J,YAAY,iBACZC,UAAQ,EACRL,MAAOuG,EACP3G,SAAU,SAAAC,GAAC,OAAIoK,EAAQpK,EAAEC,OAAOE,UAGpC,2BAAO9D,KAAK,SAAS8D,MAAM,SAASrE,UAAU,4BEuHnDR,gBANS,SAACC,GAAD,MAAY,CAClCiM,QAASjM,EAAMiM,QACflK,WAAY/B,EAAM+B,WAClBD,SAAU9B,EAAM8B,YAGsB,CAAEiE,kBAA3BhG,EAnIC,SAAC,GAMV,IALLgG,EAKI,EALJA,eAKI,IAJJkG,QAAW+C,EAIP,EAJOA,YAAa3C,EAIpB,EAJoBA,QACxBtK,EAGI,EAHJA,WACAD,EAEI,EAFJA,SACAmN,EACI,EADJA,MAMA,OAJArG,qBAAU,WACR7C,EAAekJ,EAAMC,OAAO5O,MAC3B,CAACyF,EAAgBkJ,EAAMC,OAAO5O,KAG/B,kBAAC,WAAD,KACmB,OAAhB0O,GAAwB3C,EACvB,kBAACC,EAAD,MAEA,kBAAC,WAAD,KACE,6BAAShM,GAAG,gBACV,yBAAK0G,MAAM,aACT,yBAAKA,MAAM,mBACT,yBAAKA,MAAM,eACT,kBAAC,IAAD,CAAMA,MAAM,4BAA4BvE,GAAG,aAA3C,oBAGCX,EAASI,oBACR,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEO,GAAE,uBAAkBuM,EAAYzM,OAAOwE,KACvCjG,KAAK,SACLP,UAAU,6BAEV,uBAAGA,UAAU,0BALf,sBAUF,kBAAC,WAAD,KACE,uBACE6C,KAAK,IACLN,cAAY,UACZoL,iBAAe,QACfhD,MAAM,yBACN3K,UAAU,sCAEV,uBAAGA,UAAU,0BAPf,sBAYHwB,EAAWM,wBACmB,IAA7BN,EAAWO,eACXP,EAAWQ,OAAOwE,MAAQiI,EAAYzM,OAAOwE,KAC3C,kBAAC,IAAD,CACEtE,GAAG,gBACHlC,UAAU,kCAEV,uBAAGyG,MAAM,kBAIjB,kBAAC,EAAD,CAAYiF,QAAS+C,IACrB,kBAAC,EAAD,CAAc/C,QAAS+C,IACvB,yBAAKzO,UAAU,WACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,sBAAd,cACCyO,EAAYxI,WAAWrG,OAAS,EAC/B,kBAAC,WAAD,KACG6O,EAAYxI,WAAWpG,KAAI,SAACoG,GAAD,OAC1B,kBAAC,EAAD,CACEnG,IAAKmG,EAAWO,IAChBP,WAAYA,QAKlB,0DAGJ,yBAAKjG,UAAU,cACb,wBAAIA,UAAU,sBAAd,aACCyO,EAAY7H,UAAUhH,OAAS,EAC9B,kBAAC,WAAD,KACG6O,EAAY7H,UAAU/G,KAAI,SAAC+G,GAAD,OACzB,kBAAC,EAAD,CACE9G,IAAK8G,EAAUJ,IACfI,UAAWA,QAKjB,0DAIN,yBAAKH,MAAM,kBACT,wBAAIA,MAAM,sBAAV,mBACClF,EAASI,oBACR,kBAAC,GAAD,CAAY8D,SAAUgJ,EAAYzM,OAAOwE,MAEzC,GAEDiI,EAAYnD,OAAOzL,KAAI,SAAC2L,GAAD,OACtB,kBAAC,EAAD,CACE1L,IAAK0L,EAAIhF,IACT8E,OAAQE,EACR/F,SAAUiJ,EAAMC,OAAO5O,iB,SC1F9BP,gBAJS,SAAAC,GAAK,MAAK,CAC9B+B,WAAY/B,EAAM+B,cAGPhC,EAtBY,SAAC,GAAD,IAAaoP,EAAb,EAAEC,UAAF,IACvBrN,WAAaM,EADU,EACVA,sBAAuBC,EADb,EACaA,cACjC+M,EAFoB,kDAGnB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAU,SAAAhH,GAAK,OACVjG,GAA0BC,EAGvB,kBAAC6M,EAAc7G,GAFf,kBAAC,IAAD,CAAU7F,GAAG,wBCkClB1C,eAAQ,KAAM,CAACwP,kBCOG,SAACC,GAAD,8CAAmB,WAAM5O,GAAN,eAAAY,EAAA,+EAE1BL,IAAMoF,OAAN,wBAA8BiJ,IAFJ,OAEtC7N,EAFsC,OAG5Cf,EAAS,CACLE,KlC5BuB,sBkC6BvBC,QAASY,EAAIC,OAGjBhB,EAASF,EAAS,sBAAuB,YARG,gDAU5CE,EAAS,CACLE,KlCpCqB,oBkCqCrBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAZtB,iEAAnB,wDDPlB/F,EAxCU,SAAC,GAEf,IADH0P,EACE,EADFA,YAAaF,EACX,EADWA,kBAGXG,EAAeD,EAAYrP,KAAI,SAAAuP,GAAK,OACtC,yBAAKtP,IAAKsP,EAAMrP,GAAIC,UAAU,aAC1B,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMkC,GAAE,kBAAakN,EAAMpN,SACvB,yBAAKK,IAAK+M,EAAM3D,OAAQ7G,IAAI,MAEhC,wBAAI5E,UAAU,eAAc,gCAASoP,EAAMhL,QAE/C,yBAAKpE,UAAU,mBACX,yBAAKA,UAAU,8BACX,wBAAIA,UAAU,mBAAkB,gCAASoP,EAAM/H,cAC/C,uBAAGrH,UAAU,aAAY,kDAAwBoP,EAAM9H,aACvD,uBAAGtH,UAAU,cAAa,yCAAuBoP,EAAM7H,KACvD,uBAAGvH,UAAU,cAAa,4CAA0BoP,EAAM7J,QAC1D,uBAAGvF,UAAU,cAAa,0CAAuB,kBAAC,IAAD,CAAQsG,OAAO,cAAc8I,EAAM5H,OACpF,uBAAGxH,UAAU,cAAa,gDAA8BoP,EAAM3H,aAGtE,yBAAKzH,UAAU,UACX,uBAAGA,UAAU,cAAa,iDAA+BoP,EAAMnH,aAC/D,4BAAQrF,QAAS,kBAAMoM,EAAkBI,EAAM5I,MAAMjG,KAAK,SAASP,UAAU,8BAA7E,eAIZ,OACI,kBAAC,WAAD,KACKmP,ME6CE3P,gBALS,SAACC,GAAD,MAAY,CAClC8B,SAAU9B,EAAM8B,SAChB2N,YAAazP,EAAMyP,eAGmB,CAAEG,gBDtEX,yDAAM,WAAMhP,GAAN,eAAAY,EAAA,+EAEXL,IAAMO,IAAI,iBAFC,OAEvBC,EAFuB,OAG7Bf,EAAS,CACLE,KlCWoB,mBkCVpBC,QAASY,EAAIC,OALY,gDAS7BhB,EAAS,CACLE,KlCOqB,oBkCNrBC,QAAS,CAACN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXpC,iEAAN,uDCsE4B+J,kBDV1B,yDAAM,WAAMjP,GAAN,SAAAY,EAAA,0DAChC2K,OAAOC,QAAQ,yCADiB,0CAGrBjL,IAAMoF,OAAO,iBAHQ,OAK3B3F,EAAS,CACLE,KlC3CmB,wBkC8CvBF,EAASF,EAAS,gCAAiC,YATxB,gDAW3BE,EAAU,CACNE,KlCvDiB,oBkCwDjBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAbvC,yDAAN,wDCUlB/F,EA3EM,SAAC,GAKf,IAJL6P,EAII,EAJJA,gBACAC,EAGI,EAHJA,kBACYzN,EAER,EAFJN,SAAYM,KAER,IADJqN,YAAeC,EACX,EADWA,aAAcrD,EACzB,EADyBA,QAM7B,OAJAzD,qBAAU,WACRgH,MACC,CAACA,IAGF,kBAAC,WAAD,KACGvD,GAA4B,OAAjBqD,EACV,kBAACpD,EAAD,MAEA,kBAAC,WAAD,KACE,6BAAShM,GAAG,aACV,yBAAK0G,MAAM,aACT,yBAAKA,MAAM,kBACT,4BACE,iDAEF,wBAAIA,MAAM,mBACR,uBAAGA,MAAM,0BAA6B,IACrC5E,GAAQA,EAAKuC,KAAK4J,MAAM,KAAK,GAAGuB,oBAFnC,mBAKA,yBACEvP,UAAU,OACVmC,MAAO,CAAE0I,QAAS,OAAQ2E,eAAgB,aAE1C,4BACExP,UAAU,iBACV4C,QAAS,kBAAM0M,MAEf,uBAAGtP,UAAU,sBAJf,uBASJ,yBAAKyG,MAAM,kBACT,6BACkB,OAAjB0I,GACoC,IAArCA,EAAaA,aAAavP,OACxB,yBAAK6G,MAAM,YACT,kBAAC,WAAD,KACE,kBAAC,GAAD,CACEyI,YAAaC,EAAaA,iBAKhC,wBAAIhN,MAAO,CAAE6J,MAAO,YAApB,oCC2DHxM,eAAQ,KAAM,CAACiQ,eFzFA,SAAChK,EAAU1B,EAAU4B,GAArB,8CAAiC,WAAMtF,GAAN,iBAAAY,EAAA,6DACrDoC,EAAS,CACXvC,QAAS,CACL,eAAgB,qBAHmC,kBAOrCF,IAAM6C,KAAN,2BAA+BgC,GAAW1B,EAAUV,GAPf,OAOjDjC,EAPiD,OAQvDf,EAAS,CACLE,KlCVoB,mBkCWpBC,QAASY,EAAIC,OAGjBhB,EAASF,EAAS,qBAAsB,YACxCwF,EAAQE,KAAK,gBAd0C,kDAiBvDxF,EAAS,CACLE,KlClBqB,oBkCmBrBC,QAAS,CAAEN,IAAK,KAAIyD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAnBX,kEAAjC,wDEyFf/F,EA/GF,SAAC,GAAiD,IAAhDkM,EAA+C,EAA/CA,QAASjG,EAAsC,EAAtCA,SAASE,EAA6B,EAA7BA,QAAS8J,EAAoB,EAApBA,eAAoB,EAE1B3L,mBAAS,CACrCuD,YAAa,GACbC,WAAY,GACZC,IAAI,GACJhC,OAAO,GACPiC,KAAK,GACLS,YAAY,KAR0C,mBAEnDlE,EAFmD,KAEzCC,EAFyC,KAYtDqD,EAMAtD,EANAsD,YACAC,EAKAvD,EALAuD,WACAC,EAIAxD,EAJAwD,IACAhC,EAGAxB,EAHAwB,OACAiC,EAEAzD,EAFAyD,KACAS,EACAlE,EADAkE,YAGEhE,EAAW,SAAAC,GAAC,OAAIF,EAAY,2BAC3BD,GAD0B,kBAE5BG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAE9B,OACI,kBAAC,WAAD,KACA,6BACI,yBAAKrE,UAAU,kBACX,4BAAI,qDAEJ,uBAAGA,UAAU,QAAb,6DAGJ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,4BAA4BqC,IAAKqJ,EAAQD,OAAQ7G,IAAI,KACpE,uBAAG5E,UAAU,QAAO,gCAAS0L,EAAQtH,SAGzC,0BAAME,SAAU,SAAAJ,GACZA,EAAEK,iBACFkL,EAAehK,EAAU1B,EAAU4B,KAEnC,qDACA,yBAAK3F,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,iBACZL,KAAK,cACLC,MAAOgD,EACPpD,SAAU,SAAAC,GAAC,OAAID,EAASC,OAE5B,yBAAKlE,UAAU,cACf,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,gBACZL,KAAK,aACLC,MAAOiD,EACPrD,SAAU,SAAAC,GAAC,OAAID,EAASC,OAE5B,yBAAKlE,UAAU,cACX,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,QACZL,KAAK,MACLC,MAAOkD,EACPtD,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhC,yBAAKlE,UAAU,cACX,2BACIO,KAAK,OACLP,UAAU,eACVyE,YAAY,WACZL,KAAK,SACLC,MAAOkB,EACPtB,SAAU,SAAAC,GAAC,OAAID,EAASC,MACxB,2BAAOlE,UAAU,aAAjB,kDAEJ,oCACJ,yBAAKA,UAAU,cACX,2BACIO,KAAK,OACLP,UAAU,eACVoE,KAAK,OACLC,MAAOmD,EACPvD,SAAU,SAAAC,GAAC,OAAID,EAASC,OAEhC,yBAAKlE,UAAU,cACX,8BACIA,UAAU,eACVyE,YAAY,+BACZL,KAAK,cACLC,MAAO4D,EACPhE,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE5B,2BAAOlE,UAAU,aAAjB,sCAEJ,2BAAOO,KAAK,SAAS8D,MAAM,SAASrE,UAAU,iBAAkB,IAChE,kBAAC,IAAD,CAAMkC,GAAG,YAAY3B,KAAK,SAASP,UAAU,6BAA7C,YAEJ,iCC1DGR,gBAJS,SAAAC,GAAK,MAAK,CAC9BiM,QAASjM,EAAMiM,WAGqB,CAAClG,kBAA1BhG,CAA2C2M,aA5ClC,SAAC,GAKlB,IAJH3G,EAIE,EAJFA,eACUiJ,EAGR,EAHF/C,QAAU+C,YACVC,EAEE,EAFFA,MACA/I,EACE,EADFA,QAMA,OAJA0C,qBAAU,WACN7C,EAAekJ,EAAMC,OAAO5O,MAC9B,CAACyF,EAAgBkJ,EAAMC,OAAO5O,KAG5B,kBAAC,WAAD,KACI,6BAASA,GAAG,SACR,yBAAKC,UAAU,aACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,aAES,OAAhByO,EAEI,kBAAC,GAAD,CAAM/C,QAAS+C,EAAYzM,OAAQ2D,QAASA,EAASF,SAAUgJ,EAAYzM,OAAOwE,MAElF,IAIZ,yBAAKxG,UAAU,YACX,yBAAKqC,IAAKC,EAAQ,KAA2BsC,IAAI,GAAG5E,UAAU,2BCL3ER,gBAJS,SAAAC,GAAK,MAAK,CAC9B8B,SAAU9B,EAAM8B,YAGL/B,EAtBU,SAAC,GAAD,IAAaoP,EAAb,EAAEC,UAAF,IACrBtN,SAAWI,EADU,EACVA,oBAAqBC,EADX,EACWA,YAC7BkN,EAFkB,gDAGjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAU,SAAAhH,GAAK,OACVpG,GAAwBC,EAGrB,kBAACgN,EAAc7G,GAFf,kBAAC,IAAD,CAAU7F,GAAG,sB,oCCX3BwN,GAAe,GCUfA,GAAe,CACjB/O,MAAOO,aAAayO,QAAQ,SAC5B7N,sBAAuB,KACvBC,eAAe,EACfC,OAAQ,MCLN0N,GAAe,CACjB/O,MAAOO,aAAayO,QAAQ,SAC5BhO,oBAAqB,KACrBC,aAAa,EACbC,KAAM,MCHJ6N,GAAe,CACjBjB,YAAa,KACb/C,QAAS,KACTmC,SAAU,GACV/B,SAAS,EACTjI,MAAO,ICVL+L,GAAc,CAChBT,aAAc,KACdrD,SAAS,EACTjI,MAAO,ICHIgM,8BAAgB,CAC3BlQ,MLJW,WAAyC,IAA/BF,EAA8B,uDAAtBiQ,GAAcI,EAAQ,uCAC5CvP,EAAiBuP,EAAjBvP,KAAMC,EAAWsP,EAAXtP,QACb,OAAQD,GACJ,IvCPiB,YuCQb,MAAM,GAAN,oBAAWd,GAAX,CAAkBe,IACtB,IvCRoB,euCShB,OAAOf,EAAMsQ,QAAO,SAAApQ,GAAK,OAAIA,EAAMI,KAAOS,KAC9C,QACI,OAAOf,IKHf+B,WJUW,WAAwC,IAA/B/B,EAA8B,uDAAtBiQ,GAAcI,EAAQ,uCAC3CvP,EAAiBuP,EAAjBvP,KAAMC,EAAWsP,EAAXtP,QACb,OAAQD,GACJ,IxChBqB,gBwCiBjB,OAAO,2BACAd,GADP,IAEIqC,uBAAuB,EACvBC,eAAe,EACfC,OAAQxB,IAEhB,IxCzB+B,0BwC0B/B,IxCtB4B,uBwCwBxB,OADAU,aAAa8O,QAAQ,QAASxP,EAAQG,OAC/B,uCACAlB,GACAe,GAFP,IAGIsB,uBAAuB,EACvBC,eAAe,IAEvB,IxCjC4B,uBwCkC5B,IxC9ByB,oBwC+BzB,IxCvBsB,iBwCyBlB,OADAb,aAAa+O,WAAW,SACjB,2BACAxQ,GADP,IAEIkB,MAAO,KACPmB,uBAAuB,EACvBC,eAAe,IAEvB,IxCtCqB,gBwCuCrB,IxC1CyB,oBwC4CrB,OADAb,aAAa+O,WAAW,SACjB,2BACAxQ,GADP,IAEIkB,MAAO,KACPmB,uBAAuB,EACvBC,eAAe,IAEvB,QACI,OAAOtC,IIhDf8B,SHQW,WAAwC,IAA/B9B,EAA8B,uDAAtBiQ,GAAcI,EAAQ,uCAC3CvP,EAAiBuP,EAAjBvP,KAAMC,EAAWsP,EAAXtP,QACb,OAAQD,GACJ,IzCCmB,cyCAf,OAAO,2BACAd,GADP,IAEIkC,qBAAqB,EACrBC,aAAa,EACbC,KAAMrB,IAEd,IzCR6B,wByCS7B,IzCL0B,qByCOtB,OADAU,aAAa8O,QAAQ,QAASxP,EAAQG,OAC/B,uCACAlB,GACAe,GAFP,IAGImB,qBAAqB,EACrBC,aAAa,IAErB,IzChB0B,qByCiB1B,IzCbuB,kByCenB,OADAV,aAAa+O,WAAW,SACjB,2BACAxQ,GADP,IAEIkB,MAAO,KACPgB,qBAAqB,EACrBC,aAAa,IAErB,IzCvBuB,kByCwBvB,IzCrBmB,cyCsBnB,IzCb2B,sByCevB,OADAV,aAAa+O,WAAW,SACjB,2BACAxQ,GADP,IAEIkB,MAAO,KACPgB,qBAAqB,EACrBC,aAAa,IAErB,QACI,OAAOnC,IG9CfiM,QFSW,WAAyC,IAA/BjM,EAA8B,uDAAtBiQ,GAAcI,EAAQ,uCAC5CvP,EAAiBuP,EAAjBvP,KAAMC,EAAWsP,EAAXtP,QAEb,OAAQD,GACJ,I1CbmB,c0CcnB,I1CXsB,iB0CYlB,OAAO,2BACAd,GADP,IAEIiM,QAASlL,EACTsL,SAAS,IAEjB,I1CnByB,oB0CoBrB,OAAO,2BACArM,GADP,IAEIgP,YAAajO,EACbsL,SAAS,IAGjB,I1CPkB,a0CQd,OAAO,2BACArM,GADP,IAEIgP,YAAY,2BAAMhP,EAAMgP,aAAb,IAA0BnD,OAAQ9K,IAC7CsL,SAAS,IAEjB,I1CXqB,gB0CYjB,OAAO,2BACArM,GADP,IAEIgP,YAAY,2BACLhP,EAAMgP,aADF,IAEPnD,OAAQ7L,EAAMgP,YAAYnD,OAAOyE,QAAO,SAAAG,GAAO,OAAIA,EAAQ1J,MAAQhG,OAEvEsL,SAAS,IAEjB,I1CxCoB,e0CyChB,OAAO,2BACArM,GADP,IAEIoO,SAAUrN,EACVsL,SAAS,IAEjB,I1C3CqB,gB0C4CrB,I1C5BwB,mB0C6BpB,OAAO,2BACArM,GADP,IAEIoE,MAAOrD,EACPsL,SAAS,IAEjB,I1CnDqB,gB0CoDjB,OAAO,2BACArM,GADP,IAEIiM,QAAS,KACTI,SAAS,IAGjB,QACI,OAAOrM,IE9DfyP,YDCW,WAAqC,IAA5BzP,EAA2B,uDAArBmQ,GAAaE,EAAQ,uCACxCvP,EAAiBuP,EAAjBvP,KAAMC,EAAWsP,EAAXtP,QAEb,OAAOD,GACH,I3CUwB,mB2CJxB,I3CKwB,mB2CCxB,I3CC2B,sB2CAvB,OAAO,2BACAd,GADP,IAEI0P,aAAc3O,EACdsL,SAAS,IAEjB,I3CNyB,oB2COrB,OAAO,2BACArM,GADP,IAEIoE,MAAOrD,EACPsL,SAAS,IAEjB,QACI,OAAOrM,MEnCb0Q,GAAa,CAACC,MAILC,GAFDC,uBAAYC,GAJL,GAIgCC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCqBzFjP,aAAaP,OACdD,EAAaQ,aAAaP,OAG5B,IAoCe+P,GApCH,WAMV,OALArI,qBAAU,WACRgI,GAAMhQ,SAASW,KACfqP,GAAMhQ,SAASiB,OACd,IAGD,kBAAC,IAAD,CAAU+O,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAI/B,UAAWgC,IACjC,yBAAK7Q,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2Q,OAAK,EAACC,KAAK,aAAa/B,UAAWiC,IAC1C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,eAAe/B,UAAWkC,IAC5C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,kBAAkB/B,UAAWmC,IAC/C,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,gBAAgB/B,UAAWoC,IAC7C,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,YAAY/B,UAAWqC,IACzC,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,cAAc/B,UAAWsC,KAC3C,kBAAC,GAAD,CAAoBR,OAAK,EAACC,KAAK,aAAa/B,UAAWuC,IACvD,kBAAC,GAAD,CAAoBT,OAAK,EAACC,KAAK,iBAAiB/B,UAAWwC,IAC3D,kBAAC,GAAD,CAAoBV,OAAK,EAACC,KAAK,kBAAkB/B,UAAWyC,IAC5D,kBAAC,GAAD,CAAoBX,OAAK,EAACC,KAAK,kBAAkB/B,UAAW0C,IAC5D,kBAAC,GAAD,CAAoBZ,OAAK,EAACC,KAAK,gBAAgB/B,UAAW2C,IAC1D,kBAAC,GAAD,CAAoBb,OAAK,EAACC,KAAK,eAAe/B,UAAW4C,KACzD,kBAAC,GAAD,CAAoBd,OAAK,EAACC,KAAK,mBAAmB/B,UAAW6C,WCxD3EC,IAAS5C,OACP,kBAAC,IAAM6C,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U,wCCT1BxS,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.05ad2616.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_doctor_kw5l.baaceb4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/coughing_2.f1f96e75.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctor8.e99223a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/newDoctor1.45a94407.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_forms_78yw.6e6a5db0.svg\";","module.exports = __webpack_public_path__ + \"static/media/graduation.d7750959.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_medical_research_qg4d.7702c996.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctor4.0211ccbe.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar.ef5703c5.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        {alert.msg}\n    </div>\n));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeOut=5000) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeOut);\n};","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\n// Doctor action types\nexport const REGISTER_DOCTOR_SUCCESS = 'REGISTER_DOCTOR_SUCCESS';\nexport const REGISTER_DOCTOR_FAIL = 'REGISTER_DOCTOR_FAIL';\nexport const DOCTOR_LOADED = 'DOCTOR_LOADED';\nexport const AUTH_DOCTOR_ERROR = 'AUTH_DOCTOR_ERROR';\nexport const LOGIN_DOCTOR_SUCCESS = 'LOGIN_DOCTOR_SUCCESS';\nexport const LOGIN_DOCTOR_FAIL = 'LOGIN_DOCTOR_FAIL';\nexport const LOGOUT_DOCTOR = 'LOGOUT_DOCTOR';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILE_BY_ID = 'GET_PROFILE_BY_ID';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\n\n// User action types\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_USER_ERROR = 'AUTH_USER_ERROR';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const GET_APPOINTMENTS = 'GET_APPOINTMENTS';\nexport const ADD_APPOINTMENTS = 'ADD_APPOINTMENTS';\nexport const APPOINTMENT_ERROR = 'APPOINTMENT_ERROR';\nexport const UPDATE_APPOINTMENTS = 'UPDATE_APPOINTMENTS';\nexport const ADD_REVIEW = 'ADD_REVIEW';\nexport const ADD_REVIEW_ERROR = 'ADD_REVIEW_ERROR';\nexport const REMOVE_REVIEW = 'REMOVE_REVIEW';\nexport const CLEAR_USER_PROFILE = 'CLEAR_USER_PROFILE';\nexport const DELETE_USER_ACCOUNT = 'DELETE_USER_ACCOUNT';","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    USER_LOADED,\n    AUTH_USER_ERROR,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAIL,\n    LOGOUT_USER,\n    CLEAR_USER_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    if(localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = await axios.get('/api/authUser');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_USER_ERROR\n        });\n    }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ name, email, password });\n    try {\n        const res = await axios.post('./api/users', body, config);\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: REGISTER_USER_FAIL\n        });\n    }\n};\n\n// Login User\nexport const login = (email, password) => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ email, password });\n    try {\n        const res = await axios.post('/api/authUser', body, config);\n\n        dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({ \n            type: LOGIN_USER_FAIL\n        });\n    }\n};\n\n// Logout/ clear Profile\nexport const logout_user = () => dispatch => {\n    dispatch({\n        type: CLEAR_USER_PROFILE\n    });\n    dispatch({\n        type: LOGOUT_USER\n    });\n}","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_DOCTOR_SUCCESS,\n    REGISTER_DOCTOR_FAIL,\n    DOCTOR_LOADED,\n    AUTH_DOCTOR_ERROR,\n    LOGIN_DOCTOR_SUCCESS,\n    LOGIN_DOCTOR_FAIL,\n    LOGOUT_DOCTOR,\n    CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load Doctors\nexport const loadDoctor = () => async dispatch => {\n    if(localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = await axios.get('/api/authDoctor');\n\n        dispatch({\n            type: DOCTOR_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_DOCTOR_ERROR\n        });\n    }\n};\n\n// Register Doctor\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ name, email, password });\n    try {\n        const res = await axios.post('/api/doctors', body, config);\n        console.log(res);\n        \n        dispatch({\n            type: REGISTER_DOCTOR_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadDoctor());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: REGISTER_DOCTOR_FAIL\n        });\n    }\n};\n\n// Login Doctor\nexport const login = (email, password) => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ email, password });\n    try {\n        const res = await axios.post('/api/authDoctor', body, config);\n        \n        dispatch({\n            type: LOGIN_DOCTOR_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadDoctor());\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({ \n            type: LOGIN_DOCTOR_FAIL\n        });\n    }\n};\n\n// Logout/ clear Profile\nexport const logout_doctor = () => dispatch => {\n    dispatch({\n        type: CLEAR_PROFILE\n    });\n    dispatch({\n        type: LOGOUT_DOCTOR\n    });\n}","import React, { Fragment } from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout_user } from '../../actions/authUser';\nimport { logout_doctor } from '../../actions/authDoctor';\n\nimport '../../App.css';\n\nconst Navbar = (\n        { \n            authUser: { isUserAuthenticated, loadingUser, user}, logout_user,\n            authDoctor: {isDoctorAuthenticated, loadingDoctor, doctor}, logout_doctor\n        }\n    ) => {\n        \n        const authUserLinks = (\n            <Fragment>\n                <Link className=\"nav-logo\" to=\"/appointment\">\n                Cure<img className=\"nav-log-img\" style={{width: \"3.2rem\"}} src={require(\"./doctor (1).png\")} />       \n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item active\">\n                            <Link to=\"/profiles\" className=\"nav-link\">Doctors</Link>\n                        </li>\n                        <li className=\"nav-item active\">\n                            <Link to=\"/appointment\" className=\"nav-link \">Appointments\n                            </Link>\n                        </li>\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link font-weight-bolder\" \n                                onClick= {logout_user} href=\"\">\n                            <i className='fas fa-sign-out-alt' />{' '}\n                            <span>Logout</span></a>\n                        </li>\n                    </ul>\n                </div>\n            </Fragment>\n        );\n        const authDoctorLinks = (\n            <Fragment>\n                <Link className=\"nav-logo\" to=\"/dashboard\">\n                Cure<img className=\"nav-log-img\" style={{width: \"3.2rem\"}} src={require(\"./doctor (1).png\")} />       \n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item active\">\n                            <Link to=\"/dashboard\" className=\"nav-link \">Dashboard</Link>\n                        </li>\n                        <li className=\"nav-item active\">\n                            <Link to=\"/profiles\" className=\"nav-link\">Doctors</Link>\n                        </li>\n                        <li className=\"nav-item dropdown active\">\n                            <Link className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Update Profile\n                            </Link>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <Link className=\"dropdown-item\" to=\"/edit-Profile\"><i className=\"far fa-id-card\"></i> Edit Profile</Link>\n                                <Link className=\"dropdown-item\" to=\"/add-Education\"><i className=\"fas fa-university\"></i> Add Education</Link>\n                                <Link className=\"dropdown-item\" to=\"/add-Experience\"> <i className=\"fab fa-black-tie\"></i> Add Experience</Link>\n                            </div>\n                        </li>\n                        <li className=\"nav-item active\">\n                                <a className=\"nav-link font-weight-bolder\" \n                                    onClick= {logout_doctor} href=\"\">\n                                <i className='fas fa-sign-out-alt' />{' '}\n                                <span>Logout</span></a>\n                            </li>\n                    </ul>\n                </div>\n            </Fragment>\n        )\n        const guestLinks = (\n            <Fragment>\n                <Link className=\"nav-logo\" to=\"/\">\n                    Cure<img className=\"nav-log-img\" style={{width: \"3.2rem\"}} src={require(\"./doctor (1).png\")} />       \n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item active\">\n                        <Link to=\"/profiles\" className=\"nav-link\">Doctors</Link>\n                    </li>\n                    <li className=\"nav-item dropdown active\">\n                            <Link className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Log in\n                            </Link>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <Link className=\"dropdown-item\" to=\"/loginUser\"><i className=\"fas fa-users\"></i> Login as User</Link>\n                                <Link className=\"dropdown-item\" to=\"/loginDoctor\"><i className=\"fas fa-user-md\"></i> Login as Doctor</Link>\n                            </div>\n                        </li>\n                    <li className=\"nav-item dropdown active\">\n                            <Link className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                Register\n                            </Link>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                                <Link className=\"dropdown-item\" to=\"/registerUser\"><i className=\"fas fa-users\"></i> Register as User</Link>\n                                <Link className=\"dropdown-item\" to=\"/registerDoctor\"><i className=\"fas fa-user-md\"></i> Register as Doctor</Link>\n                            </div>\n                        </li>\n                </ul>\n                </div>\n            </Fragment>\n        )\n    \n    return (\n        <nav className=\"main navbar sticky-top navbar-expand-sm navbar-dark bg-dark mb-3\">\n            <div className=\"container\">\n                    {\n                        isUserAuthenticated || isDoctorAuthenticated ? (\n                            <Fragment>\n                            {\n                                !loadingUser && (\n                                    <Fragment> \n                                        {\n                                            isUserAuthenticated ? authUserLinks : authDoctorLinks\n                                        } \n                                    </Fragment>\n                                )\n                            }\n                            </Fragment>\n                        ) : guestLinks\n                    }\n            </div>\n        </nav>\n    );\n};\nNavbar.propTypes = {\n    logout_user: PropTypes.func.isRequired,\n    logout_doctor: PropTypes.func.isRequired,\n    authUser: PropTypes.object.isRequired,\n    authDoctor: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    authUser: state.authUser,\n    authDoctor: state.authDoctor\n});\n\nexport default connect(mapStateToProps, {logout_user, logout_doctor})(Navbar);\n","import React, { Fragment } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport \"../../App.css\";\n\nconst Landing = ({ isDoctorAuthenticated, isUserAuthenticated }) => {\n  if (isDoctorAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  } else if (isUserAuthenticated) {\n    return <Redirect to=\"/appointment\" />;\n  }\n\n  return (\n    <Fragment>\n      <section id=\"landing\">\n        <div className=\"container\">\n          <div className=\"heading\">\n            <h1 className=\"main-heading\">Find Your Best Doctor &</h1>\n            <h1 className=\"main-heading\">\n              Book Your <span className=\"main-span\">Appointment.</span>\n            </h1>\n          </div>\n          <div className=\"signup\">\n            <div className=\"doctor-signup\">\n              <h2 className=\" item heading-sub\">\n                <strong>For Doctors</strong>\n              </h2>\n              <p className=\"item description\">\n                Click \"Sign Up\" and select \"Doctor\" as user type Provide basic\n                and professional information Choose appointment scheduling\n                timings to set availability. Start managing appointments of\n                patients.\n              </p>\n              <Link\n                to=\"/registerDoctor\"\n                type=\"button\"\n                className=\"item btn btn-info\"\n              >\n                Sign Up\n              </Link>\n            </div>\n            <div className=\"user-signup\">\n              <h2 className=\"item heading-sub\">\n                <strong>For Users</strong>\n              </h2>\n              <p className=\"item special description\">\n                Click the \"Sign Up\" button below. Provide your basic\n                information, such as your name, email address, and password. you\n                can start using the app to search for doctors, book\n                appointments, and manage your appointments.\n              </p>\n              <Link to=\"/registerUser\" className=\"item btn btn-outline-info\">\n                Sign Up\n              </Link>\n            </div>\n          </div>\n          <br />\n          <div className=\"img\">\n            <div className=\"img-1\">\n              <img src={require(\"../../img/undraw_doctor_kw5l.svg\")} />\n            </div>\n          </div>\n        </div>\n        <br />\n      </section>\n    </Fragment>\n  );\n};\nLanding.propTypes = {\n  isDoctorAuthenticated: PropTypes.bool.isRequired,\n  isUserAuthenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isDoctorAuthenticated: state.authDoctor.isDoctorAuthenticated,\n  isUserAuthenticated: state.authUser.isUserAuthenticated,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { useState, Fragment } from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {login} from '../../actions/authUser';\n\nconst LoginUser = ({ login, isUserAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {email, password} = formData;\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email,password);\n    }\n\n    // Redirect if login\n    if(isUserAuthenticated) {\n        return <Redirect to=\"/profiles\" />\n    }\n\n    return (\n        <Fragment>\n            <section id=\"Login\">\n                <div className=\"container\">\n                    <div className=\"common-form\">\n                        <div className=\"form-side\">\n                            <div className=\"heading-common\">\n                                <h1><strong>Log in User</strong>{' '}\n                                    <i className=\"fas fa-sign-in-alt\"></i>\n                                </h1>\n                            </div>\n                            <form onSubmit={e => onSubmit(e)}>\n                                <div className=\"form-group\">\n                                <label className=\"label\" for=\"exampleInputEmail1\">Email address</label>\n                                <input \n                                    type=\"email\" \n                                    className=\"form-control\" \n                                    placeholder=\"Enter your email address.\" \n                                    name=\"email\"\n                                    value={email}\n                                    onChange={e => onChange(e)}\n                                    required\n                                />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                                </div>\n                                <div className=\"form-group\">\n                                <label className=\"label\" for=\"exampleInputPassword1\">Password</label>\n                                <input \n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    placeholder=\"Enter your password.\" \n                                    name=\"password\"\n                                    minLength=\"6\"\n                                    value={password}\n                                    onChange={e => onChange(e)}\n                                />\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Log In\" />\n                                <p>Or {' '}\n                                <Link to=\"/\">Create a new account</Link></p>\n                            </form>\n                        </div>\n                        <div className=\"img-side\">\n                            <img src={require(\"../../img/coughing_2.svg\")} alt=\"\" className=\"register-user\" />\n                        </div>\n                    </div>\n                </div>\n            </section>    \n        </Fragment>\n    );\n};\n\nLoginUser.propTypes ={\n    login: PropTypes.func.isRequired,\n    isUserAuthenticated: PropTypes.bool\n};\nconst mapStateToProps = state => ({\n    isUserAuthenticated: state.authUser.isUserAuthenticated\n});\n\nexport default connect(mapStateToProps, {login})(LoginUser);\n","import React, { useState, Fragment } from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {login} from '../../actions/authDoctor';\n\nconst LoginDoctor = ({ login, isDoctorAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {email, password} = formData;\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email,password);\n    }\n\n    // Redirect if login\n    if(isDoctorAuthenticated) {\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <section id=\"Login\">\n                <div className=\"container\">\n                    <div className=\"common-form\">\n                        <div className=\"form-side\">\n                            <div className=\"heading-common\">\n                                <h1><strong>Log in Doctor </strong>\n                                    <i className=\"fas fa-sign-in-alt\"></i>\n                                </h1>\n                            </div>\n                            <form onSubmit={e => onSubmit(e)}>\n                                <div className=\"form-group\">\n                                <label className=\"label\" for=\"exampleInputEmail1\">Email address</label>\n                                <input \n                                    type=\"email\" \n                                    className=\"form-control\" \n                                    placeholder=\"Enter your email address.\" \n                                    name=\"email\"\n                                    value={email}\n                                    onChange={e => onChange(e)}\n                                    required\n                                />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                                </div>\n                                <div className=\"form-group\">\n                                <label className=\"label\" for=\"exampleInputPassword1\">Password</label>\n                                <input \n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    placeholder=\"Enter your password.\" \n                                    name=\"password\"\n                                    minLength=\"6\"\n                                    value={password}\n                                    onChange={e => onChange(e)}\n                                />\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Log In\" />\n                                <p>or {' '}\n                                <Link to=\"/\">Create a new account</Link></p>\n                            </form>\n                        </div>\n                        <div className=\"img-side\">\n                            <img src={require(\"../../img/doctor8.svg\")} alt=\"\" className=\"register-user\" />\n                        </div>\n                    </div>\n                </div>\n            </section>    \n        </Fragment>\n    );\n};\n\nLoginDoctor.propTypes ={\n    login: PropTypes.func.isRequired,\n    isDoctorAuthenticated: PropTypes.bool\n};\nconst mapStateToProps = state => ({\n    isDoctorAuthenticated: state.authDoctor.isDoctorAuthenticated\n});\n\nexport default connect(mapStateToProps, {login})(LoginDoctor);\n","import React, { useState, Fragment } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/authDoctor\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst DoctorRegister = ({ setAlert, register, isDoctorAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = formData;\n  const onChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Password do not match\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n  if (isDoctorAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n      <section id=\"common\">\n        <div className=\"container\">\n          <div className=\"common-form\">\n            <div className=\"form-side\">\n              <div className=\"heading-common\">\n                <h1>\n                  <strong>Doctor</strong>\n                  <i className=\"fas fa-user-md\"></i>\n                </h1>\n              </div>\n              <form onSubmit={(e) => onSubmit(e)}>\n                <div className=\"form-group\">\n                  <label className=\"label\" for=\"exampleInputEmail1\">\n                    Email address\n                  </label>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Enter your email address.\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => onChange(e)}\n                  />\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\n                    This site uses{\" \"}\n                    <a\n                      href=\"https://en.gravatar.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Gravatar{\" \"}\n                    </a>{\" \"}\n                    so if you want a profile image, use a Gravatar email\n                  </small>\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"label\" for=\"exampleInputEmail1\">\n                    Full Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter your full name.\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => onChange(e)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"label\" for=\"exampleInputPassword1\">\n                    Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Enter password.\"\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => onChange(e)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"label\" for=\"exampleInputPassword1\">\n                    Confirm Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Enter your password again.\"\n                    name=\"password2\"\n                    value={password2}\n                    onChange={(e) => onChange(e)}\n                  />\n                </div>\n                <input type=\"submit\" className=\"btn btn-info\" value=\"Sign Up\" />\n              </form>\n            </div>\n            <div className=\"img-side\">\n              <img\n                className=\"register-user\"\n                src={require(\"../../img/newDoctor1.svg\")}\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nDoctorRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isDoctorAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isDoctorAuthenticated: state.authDoctor.isDoctorAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(DoctorRegister);\n","import React, { useState, Fragment } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {setAlert} from '../../actions/alert';\nimport { register} from '../../actions/authUser';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\n\nconst UserRegister = ({ setAlert, register, isUserAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const {name, email, password, password2} = formData;\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = async e => {\n        e.preventDefault();\n        if(password !== password2) {\n            setAlert('Password do not match', 'danger');\n        } else {\n            register({ name, email, password });\n        }\n    }\n    if(isUserAuthenticated) {\n        return <Redirect to='/appointment' />\n    }\n\n    return (\n        <Fragment>\n            <section id=\"common\">\n                <div className=\"container\">\n                    <div className=\"common-form\">\n                        <div className=\"form-side\">\n                            <div className=\"heading-common\">\n                            <h1><strong>User </strong>\n                                <i className=\"fas fa-users\"></i>\n                            </h1>\n                            </div>\n                            <form onSubmit={e => onSubmit(e)}>\n                                <div className=\"form-group\">\n                                <label className=\"label\" for=\"exampleInputEmail1\">Email address</label>\n                                <input \n                                    type=\"email\"\n                                    className=\"form-control\" \n                                    placeholder=\"Enter your email address.\" \n                                    name=\"email\"\n                                    value={email}\n                                    onChange={e => onChange(e)}\n                                />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">This site uses <a href=\"https://en.gravatar.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gravatar </a> so if you want a profile image, use a Gravatar email</small>\n                                </div>\n                                <div className=\"form-group\">\n                                <label className=\"label\" for=\"exampleInputEmail1\">Full Name</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\" \n                                    placeholder=\"Enter your full name.\" \n                                    name=\"name\"\n                                    value={name}\n                                    onChange={e => onChange(e)}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <label className=\"label\" for=\"exampleInputPassword1\">Password</label>\n                                <input \n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    placeholder=\"Enter password.\" \n                                    name=\"password\"\n                                    value={password} \n                                    onChange={e => onChange(e)}\n                                />\n                                </div>\n                                <div className=\"form-group\">\n                                <label className=\"label\" for=\"exampleInputPassword1\">Confirm Password</label>\n                                <input \n                                    type=\"password\" \n                                    className=\"form-control\" \n                                    placeholder=\"Enter your password again.\" \n                                    name=\"password2\"\n                                    value={password2} \n                                    onChange={e => onChange(e)}\n                                />\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Sign Up\" />\n                            </form>\n                        </div>\n                        <div className=\"img-side\">\n                            <img className=\"register-user\" src={require(\"../../img/undraw_forms_78yw.svg\")} alt=\"\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    );\n};\n\nUserRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isUserAuthenticated: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps =state => ({\n    isUserAuthenticated: state.authUser.isUserAuthenticated\n});\n\nexport default connect(mapStateToProps, {setAlert, register})(UserRegister);\n","import React, { Fragment } from 'react';\n\nexport default () => (\n  <Fragment>\n    <div className=\"d-flex justify-content-center m-5\">\n      <div style={{\n          width: \"3rem\",\n          height: \"3rem\",\n          marginTop: \"15rem\"\n        }} \n        className=\"spinner-border text-info\" \n        role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </Fragment>\n);","import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    GET_PROFILE,\n    GET_PROFILE_BY_ID,\n    GET_PROFILES,\n    UPDATE_PROFILE,\n    PROFILE_ERROR,\n    CLEAR_PROFILE,\n    ADD_REVIEW,\n    ADD_REVIEW_ERROR,\n    REMOVE_REVIEW,\n    DELETE_ACCOUNT\n} from './types';\n\n// Get current doctors profile\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n        \n    }\n};\n// Get all profiles\nexport const getProfiles = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile');\n\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Get profiles by doctor id\nexport const getProfileById = doctorId => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/doctor/${doctorId}`);        \n        dispatch({\n            type: GET_PROFILE_BY_ID,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Create / Update a profile\nexport const createProfile = (formData, history, edit=false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.post('api/profile', formData, config);\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n        if(!edit) {\n            history.push('/dashboard');\n        }\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// ADD Experience\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('api/profile/experience', formData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Experience added\", 'success'));\n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n// ADD Education\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('api/profile/education', formData, config);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Education added\", 'success'));\n        console.log(history);\n        \n        history.push('/dashboard');\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete experience\nexport const deleteExperience = exp_id => async dispatch => {\n    try {\n        const res = await axios.delete(`api/profile/experience/${exp_id}`);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Experience Removed\", 'success'));\n    } catch (err) {\n        dispatch ({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n// Delete education\nexport const deleteEducation = edu_id => async dispatch => {\n    try {\n        const res = await axios.delete(`api/profile/education/${edu_id}`);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Education Removed\", 'success'));\n    } catch (err) {\n        dispatch ({\n            type: PROFILE_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Add review\nexport const addReview = (doctorId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    try {\n        const res = await axios.post(`/api/profile/doctor/:${doctorId}`, formData, config);\n        dispatch({\n            type: ADD_REVIEW,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Review Added', 'success'))\n    } catch (err) {\n        dispatch ({\n            type: ADD_REVIEW_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete Review\nexport const deleteReview = (doctorId, reviewId) => async dispatch => {\n    try {\n         await axios.delete(`/api/profile/doctor/${doctorId}/${reviewId}`);\n        \n        dispatch({\n            type: REMOVE_REVIEW,\n            payload: reviewId\n        });\n\n        dispatch(setAlert('Comment removed', 'success'));\n    } catch (err) {\n        dispatch ({\n            type: ADD_REVIEW_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete account and profile\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? this can not be undone!')) {\n        try {\n            await axios.delete('/api/profile');\n    \n            dispatch({\n                type: CLEAR_PROFILE\n            });\n            dispatch({\n                type: DELETE_ACCOUNT\n            });\n    \n            dispatch(setAlert(\"Your Account has been Removed\", 'success'));\n        } catch (err) {\n            dispatch ({\n                type: PROFILE_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            });\n        }\n    }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport {connect} from 'react-redux';\nimport {deleteExperience} from '../../actions/profile';\n\nconst Experience = ({experience, deleteExperience}) => {\n    const experiences = experience.map(exp => (\n        <tr key={exp.id}>\n            <td>{exp.medical}</td>\n            <td>{exp.position}</td>\n            <td>\n                <Moment format='DD/MM/YYYY'>{exp.from}</Moment> - {' '}\n                {exp.to === null ? (\n                    'Now'\n                ) : (\n                    <Moment format='DD/MM/YYYY'>{exp.to}</Moment>\n                )}\n            </td>\n            <td>\n                <button\n                    onClick={() => deleteExperience(exp._id)}\n                    type=\"button\" \n                    className=\"btn btn-danger\">X\n                </button>\n            </td>\n        </tr>\n    ));\n    return (\n        <Fragment>\n            <div className=\"common-details\">\n                <h2 class=\"credentials\"><strong>Experience Credentials</strong></h2>\n                    <br />\n                    <div class=\"common-table\">\n                        <table class=\"table\">\n                        <tr>\n                            <th>Hospital</th>\n                            <th>Postion</th>\n                            <th>Years</th>\n                            <th></th>\n                        </tr>\n                        {experiences}\n                        </table>\n                    </div>\n            </div>\n            <br />\n        </Fragment>\n    );\n};\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {deleteExperience})(Experience);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport {connect} from 'react-redux';\nimport {deleteEducation} from '../../actions/profile';\n\nconst Education = ({education, deleteEducation}) => {\n    const educations = education.map(edu => (\n        <tr key={edu.id}>\n            <td>{edu.school}</td>\n            <td>{edu.degree}</td>\n            <td>\n                <Moment format='DD/MM/YYYY'>{edu.from}</Moment> - {' '}\n                {edu.to === null ? (\n                    'Now'\n                ) : (\n                    <Moment format='DD/MM/YYYY'>{edu.to}</Moment>\n                )}\n            </td>\n            <td>\n                <button\n                    onClick={() => deleteEducation(edu._id)}\n                    type=\"button\" \n                    className=\"btn btn-danger\">X\n                </button>\n            </td>\n        </tr>\n    ));\n    return (\n        <Fragment>\n            <div className=\"common-details\">\n                <h2 class=\"credentials\"><strong>Education Credentials</strong></h2>\n                    <br />\n                    <div class=\"common-table\">\n                        <table class=\"table\">\n                        <tr>\n                            <th>School</th>\n                            <th>Degree</th>\n                            <th>Years</th>\n                            <th></th>\n                        </tr>\n                        {educations}\n                        </table>\n                    </div>\n            </div>\n            <br />\n        </Fragment>\n    );\n};\n\nEducation.propTypes = {\n    education: PropTypes.array.isRequired,\n    deleteEducation: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {deleteEducation})(Education);\n","import React, { Fragment,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport {connect} from 'react-redux';\n\nconst Patient = ({patient}) => {\n\n    const [value,setValue] = useState([]);\n\n    const modalBody = patient.map(pat => (\n        <Fragment key={pat._id}>\n            <h2 className=\"style-heading\"><strong>{pat.patientname}</strong></h2>\n            <p className=\"profile-p\"><strong>Father's name: {pat.fathername}</strong></p>\n            <p className=\"profile-p2\"><strong>Age: </strong>{pat.age}</p>\n            <p className=\"profile-p2\"><strong>Status: </strong>{pat.status}</p>\n            <p className=\"profile-p2\"><strong>Date: </strong><Moment format='DD/MM/YYYY'>{pat.date}</Moment></p>\n            <p className=\"profile-p2\"><strong>Booking ID: </strong>{pat.bookingId}</p>\n        </Fragment>\n    ));\n    const patients = patient.map(ptn => (\n        <tr key={ptn._id}>\n            <td>{ptn.bookingId}</td>\n            <td>{ptn.patientname}</td>\n            <td>\n                <Moment format='DD/MM/YYYY'>{ptn.date}</Moment>\n            </td>\n            <td>\n            <button \n                onClick={() => setValue(ptn._id)}\n                type=\"button\" \n                className=\"btn btn-info\"\n                data-toggle=\"modal\" data-target=\"#exampleModal\">\n                View\n            </button>\n                <div className=\"modal fade \" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Patient Details</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"profiles\">\n                                    <div className=\"profile-1\">\n                                        <div className=\"profile-details\">\n                                            <div className=\"appointment-p prfile-desc\">\n                                                {\n                                                    modalBody.map(modal => value === modal.key ? \n                                                        modal.props.children : \"\")\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"desc-p profile-buttons\">\n                                            <p className=\"profile-p2\"><strong>Description: </strong>{ptn.description}</p>                                        \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-info\" data-dismiss=\"modal\">Close</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </tr>\n    ));\n\n    return (\n        <Fragment>\n            <div className=\"common-details\">\n                <h2 className=\"credentials\"><strong>Patient Credentials</strong></h2>\n                    <br />\n                    <div className=\"common-table\">\n                        <div className=\"scroll-table\">\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Booking ID</th>\n                                        <th>Patient's Name</th>\n                                        <th>Date</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                            <tbody>\n                                {patients}\n                            </tbody>\n                            </table>\n                        </div>\n                    </div>\n            </div>\n            <br />\n        </Fragment>\n    );\n};\n\nPatient.propTypes = {\n    patient: PropTypes.array.isRequired,\n}\n\nexport default connect(null)(Patient);\n","import React, {Fragment, useState, useEffect} from 'react';\nimport {Line, Bar} from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\nconst Graph = ({patient}) => {\n    const [chartData, setChartData] = useState([]);\n\n    const chart = () => {\n        const patientData = [];\n        const jan = [0];\n        const feb = [0];\n        const mar = [0];\n        const apr = [0];\n        const may = [0];\n        const jun = [0];\n        const jul = [0];\n        const aug = [0];\n        const sep = [0];\n        const oct = [0];\n        const nov = [0];\n        const dec = [0];\n    \n        patient.forEach(pat => {\n            if(new Date(pat.date).getMonth() === 0) {\n                return jan.push(jan[0]+1);\n            } else if(new Date(pat.date).getMonth() === 1) {\n                return feb.push(feb[0]+1); \n            } else if(new Date(pat.date).getMonth() === 2) {\n                return mar.push(mar[0]+1);\n            } else if(new Date(pat.date).getMonth() === 3) {\n                return apr.push(apr[0]+1);\n            } else if(new Date(pat.date).getMonth() === 4) {\n                return may.push(may[0]+1);\n            } else if(new Date(pat.date).getMonth() === 5) {\n                return jun.push(jun[0]+1);\n            } else if(new Date(pat.date).getMonth() === 6) {\n                return jul.push(jul[0]+1);\n            } else if(new Date(pat.date).getMonth() === 7) {\n                return aug.push(aug[0]+1);\n            } else if(new Date(pat.date).getMonth() === 8) {\n                return sep.push(sep[0]+1);\n            } else if(new Date(pat.date).getMonth() === 9) {\n                return oct.push(oct[0]+1);\n            } else if(new Date(pat.date).getMonth() === 10) {\n                return nov.push(nov[0]+1);\n            } else if(new Date(pat.date).getMonth() === 11) {\n                return dec.push(dec[0]+1);\n            } else {\n            }\n        });\n    \n        var janData = jan.reduce( (a, b) => a+b, jan[0]);\n        var febData = feb.reduce( (a, b) => a+b, feb[0]);\n        var marData = mar.reduce( (a, b) => a+b, mar[0]);\n        var aprData = apr.reduce( (a, b) => a+b, apr[0]);\n        var mayData = may.reduce( (a, b) => a+b, may[0]);\n        var junData = jun.reduce( (a, b) => a+b, jun[0]);\n        var julData = jul.reduce( (a, b) => a+b, jul[0]);\n        var augData = aug.reduce( (a, b) => a+b, aug[0]);\n        var sepData = sep.reduce( (a, b) => a+b, sep[0]);\n        var octData = oct.reduce( (a, b) => a+b, oct[0]);\n        var novData = nov.reduce( (a, b) => a+b, nov[0]);\n        var decData = dec.reduce( (a, b) => a+b, dec[0]);\n    \n        patientData.push(janData);\n        patientData.push(febData);\n        patientData.push(marData);\n        patientData.push(aprData);\n        patientData.push(mayData);\n        patientData.push(junData);\n        patientData.push(julData);\n        patientData.push(augData);\n        patientData.push(sepData);\n        patientData.push(octData);\n        patientData.push(novData);\n        patientData.push(decData);\n    \n        console.log(patientData);\n    \n        setChartData({\n            labels: [\n                    \"January\", \n                    \"February\", \n                    \"March\", \n                    \"April\", \n                    \"May\", \n                    \"June\", \n                    \"July\", \n                    \"August\", \n                    \"September\", \n                    \"October\", \n                    \"November\", \n                    \"December\"\n                ],\n            datasets: [\n                {\n                    label: \"level of patients\",\n                    data: patientData,\n                    borderColor: [\n                        \"#17a2b8\"\n                    ],\n                    pointBorderColor: [\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                        \"#17a2b8\",\n                    ],\n                    borderWidth: 3\n                }\n            ]\n        }); \n    };\n    useEffect(() => {\n        chart();\n    }, []);\n\n    return (\n        <Fragment>\n            <div className=\"user-graph\">\n                            <Line\n                                data={chartData}\n                                options={{\n                                    title: { text: \"APPOINTMENTS PER MONTHS\", display: true },\n                                    labels: {\n                                        \"fontColor\": \"#f4f4f4\",\n                                        \"fontWeight\": \"bold\",\n                                    },\n                                    scales: {\n                                    yAxes: [\n                                        {\n                                        ticks: {\n                                            autoSkip: true,\n                                            maxTicksLimit: 10,\n                                            beginAtZero: true\n                                        },\n                                        gridLines: {\n                                            display: false\n                                        }\n                                        }\n                                    ],\n                                    xAxes: [\n                                        {\n                                        gridLines: {\n                                            display: false\n                                        }\n                                        }\n                                    ]\n                                    }\n                                }}\n                            />\n                        </div>\n        </Fragment>\n    );\n};\n\nGraph.propTypes = {\n    patient: PropTypes.array.isRequired,\n}\n\nexport default Graph;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport {connect} from 'react-redux';\nimport Graph from './Graph';\n\nconst Review = ({review, patient}) => {\n    const reviews = review.map(rev => (\n        <div className=\"card\">\n            <img className=\"card-img-top\" src={rev.avatar} alt=\"Card image cap\" />\n                <div className=\"card-body\">\n                    <p className=\"card-text\">{rev.text}</p>\n                    <p class=\"post-date\">posted on \n                     {' '}<Moment format='DD/MM/YYYY'>{rev.date}</Moment>\n                    </p>\n                    <em>{rev.name}</em>\n                </div>\n        </div>\n    ));\n    return (\n        <Fragment>\n            <div className=\"review-graph\">\n                <div className=\"common-details\">\n                <h2 class=\"credentials\"><strong>Users Reviews</strong></h2>\n                    <br />\n                    <div id=\"testimonials\">\n                        <div class=\"scroll\">\n                            { review.length === 0 ? \"No Reviews Yet\" : reviews }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"common-details\">\n                    <h2 className=\"credentials\"><strong>Total Appointments</strong></h2>\n                    <br />\n                    <div id=\"graph\">\n                        <Graph patient={patient} />\n                    </div>\n                </div>\n            </div>\n            <br />\n        </Fragment>\n    );\n};\n\nReview.propTypes = {\n    patient: PropTypes.array.isRequired,\n}\n\nexport default connect(null)(Review);\n","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport Experience from './Experience';\nimport Education from './Education';\nimport Patient from './Patient';\nimport Review from './Review';\nimport {getCurrentProfile, deleteAccount} from '../../actions/profile';\nimport {Link} from 'react-router-dom';\n\n\nconst Dashboard = ({\n        getCurrentProfile, \n        deleteAccount, \n        authDoctor: {doctor}, \n        profile: {profile, loading}\n    }) => {\n        useEffect(() => {\n            getCurrentProfile();\n        }, [getCurrentProfile]);    \n        \n    return loading && profile == null ? (\n        <Spinner />\n    ) : (\n        <Fragment>\n                <section id=\"dashboard\">\n                    <div className=\"container\">\n                        <div className=\"heading-common\">\n                            <h1><strong>Dashboard</strong></h1>\n                            <h2 className=\"welcome-heading\"><i className=\"fas fa-user-md\"></i> Welcome {doctor && doctor.name}</h2>\n                        </div>\n                        <br />\n                        {profile !== null ? (\n                            <Fragment>\n                                {profile.patients !== null && profile.patients.length > 0 ? \n                                    (\n                                        <Patient patient={profile.patients} />\n                                    ) : (\n                                        <h5 style={{color: \"#738f93\"}}>No Appointments yet..</h5>\n                                    )\n                                }\n                                <Review patient={profile.patients} review={profile.review} />\n                                <Experience experience={profile.experience} />\n                                <Education education={profile.education} />\n                                <button \n                                    onClick={() => deleteAccount()}\n                                    type=\"button\" \n                                    className=\"btn btn-danger\"><i className=\"fas fa-user-minus\"></i> Delete My Account\n                                </button>\n                            </Fragment>\n                        ) : (\n                            <Fragment>\n                                <p>You have not any Profile add your Profile..</p>\n                                <Link to='/create-profile' className=\"btn btn-info\">\n                                    Create Profile\n                                </Link>\n                            </Fragment>  \n                    )}\n                    </div>\n                </section>\n                <br />\n        </Fragment>\n    );\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    authDoctor: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    authDoctor: state.authDoctor,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard);\n","import React, {Fragment, useState} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addEducation} from '../../actions/profile';\n\n\nconst AddEducation = ({addEducation, history}) => {\n    const [formData, setFormdata] = useState({\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        from:'',\n        to:'',\n        current: false,\n        description: ''\n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const {school, degree, fieldofstudy, from, to, current, description} = formData;\n\n    const onChange = e => setFormdata({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n\n    return (\n        <Fragment>\n            <section id=\"Login\">\n                <div className=\"container\">\n                        <div style={{height: \"auto\"}} class=\"common-form\">\n                            <div className=\"form-side\">\n                                <div className=\"heading-common\">\n                                    <h1><strong>Add Education</strong>\n                                        <i className=\"fas fa-university\"></i>\n                                    </h1>  \n                                    <p className=\"lead\">\n                                        <i className=\"fas fa-user\"></i> Add any school, Medicalcamp, etc that you have attended\n                                    </p>\n                                </div>\n                                <form onSubmit={e => {\n                                    e.preventDefault();\n                                    addEducation(formData, history);\n                                }}>\n                                    <small>* = required field</small>\n                                    <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        placeholder=\"* School\"\n                                        name=\"school\"\n                                        value={school}\n                                        onChange={e => onChange(e)}\n                                        required\n                                    />\n                                    </div>\n                                    <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        placeholder=\"* Degree or Certification\"\n                                        name=\"degree\" \n                                        value={degree} \n                                        onChange={e => onChange(e)} \n                                        required\n                                    />\n                                    </div>\n                                    <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        placeholder=\"* Field of study\" \n                                        name=\"fieldofstudy\" \n                                        value={fieldofstudy} \n                                        onChange={e => onChange(e)} \n                                        required \n                                    />\n                                    </div>\n                                    \n                                    <h6>From Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" className=\"form-control\" name=\"from\" value={from} onChange={e => onChange(e)} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                                            setFormdata({ ...formData, current: !current });\n                                            toggleDisabled(!toDateDisabled);\n                                        }} /> {' '} Current School</p>\n                                    </div>\n                                    <h6>To Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control\" \n                                            name=\"to\" \n                                            value={to} \n                                            onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea \n                                            name=\"description\"\n                                            className=\"form-control\" \n                                            placeholder=\"* Program Description\" \n                                            value={description} onChange={e => onChange(e)}></textarea>\n                                        <small className=\"form-text\">Tell us a little about the program.</small>\n                                    </div>\n                                    <input type=\"submit\" className=\"btn btn-info\" />{' '}\n                                    <Link to=\"/dashboard\" type=\"submit\" className=\"btn btn-outline-secondary\">Go Back</Link>\n                                </form>\n                                <br />\n                            </div>\n                            <div className=\"img-side\">\n                                <img src={require(\"../../img/graduation.svg\")} alt=\"\" className=\"register-user\" />\n                            </div>\n                        </div>\n                    </div>\n            </section>\n        </Fragment>\n    );\n};\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addEducation})(withRouter(AddEducation));\n","import React, {Fragment, useState} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addExperience} from '../../actions/profile';\n\nconst AddExperience = ({addExperience, history}) => {\n    const [formData, setFormData] = useState({\n        medical: '',\n        position: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: '' \n    });\n\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const {medical, position, location, from, to, current, description} = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    return (\n        <div>\n            <Fragment>\n            <section id=\"Login\">\n                <div className=\"container\">\n                    <div style={{height: \"auto\"}} class=\"common-form\">\n                            <div className=\"form-side\">\n                                <div className=\"heading-common\">\n                                    <h1><strong>Add Experience </strong>\n                                        <i className=\"fab fa-black-tie\"></i>\n                                    </h1>  \n                                    <p className=\"lead\">\n                                        <i className=\"fas fa-user\"></i> Add any job or position that you have had in the past or current\n                                    </p>\n                                </div>\n                                <form onSubmit={e => {\n                                    e.preventDefault();\n                                    addExperience(formData, history);\n                                }}>\n                                    <small>* = required field</small>\n                                    <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        placeholder=\"* Hospital\"\n                                        name=\"medical\"\n                                        value={medical}\n                                        onChange={e => onChange(e)}\n                                        required\n                                    />\n                                    </div>\n                                    <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        placeholder=\"* Position\"\n                                        name=\"position\" \n                                        value={position} \n                                        onChange={e => onChange(e)} \n                                        required\n                                    />\n                                    </div>\n                                    <div className=\"form-group\">\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        placeholder=\"* Location\" \n                                        name=\"location\" \n                                        value={location} \n                                        onChange={e => onChange(e)} \n                                        required \n                                    />\n                                    </div>\n                                    \n                                    <h6>From Date</h6>\n                                    <div className=\"form-group\">\n                                        <input type=\"date\" className=\"form-control\" name=\"from\" value={from} onChange={e => onChange(e)} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\n                                            setFormData({ ...formData, current: !current });\n                                            toggleDisabled(!toDateDisabled);\n                                        }} /> {' '} Current Job</p>\n                                    </div>\n                                    <h6>To Date</h6>\n                                    <div className=\"form-group\">\n                                        <input \n                                            type=\"date\" \n                                            className=\"form-control\" \n                                            name=\"to\" \n                                            value={to} \n                                            onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea \n                                            name=\"description\"\n                                            className=\"form-control\" \n                                            placeholder=\"* Program Description\" \n                                            value={description} onChange={e => onChange(e)}></textarea>\n                                        <small className=\"form-text\">Tell us a little about the job.</small>\n                                    </div>\n                                    <input type=\"submit\" className=\"btn btn-info\" />{' '}\n                                    <Link to=\"/dashboard\" type=\"submit\" className=\"btn btn-outline-secondary\">Go Back</Link>\n                                </form>\n                                <br />\n                            </div>\n                            <div className=\"img-side\">\n                                <img className=\"register-user\" src={require(\"../../img/undraw_medical_research_qg4d.svg\")} alt=\"\" />\n                            </div>\n                        </div>\n                    </div>\n            </section>\n        </Fragment>\n        </div>\n    )\n};\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addExperience})(withRouter(AddExperience));\n","import React, {useState, Fragment} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {createProfile} from '../../actions/profile';\n\nconst CreateProfile = ({ createProfile, history}) => {\n    const [formData, setFormData] = useState({\n        clinic: '',\n        website: '',\n        location: '',\n        status: '',\n        specialists: '',\n        ruppess: '',\n        timing: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        youtube: '',\n        instagram: '' \n    });\n\n    const [displySocialInputs, toggleSocialInputs] = useState(false);\n\n    const {\n        clinic,\n        website,\n        location,\n        status,\n        specialists,\n        ruppess,\n        timing,\n        bio,\n        twitter,\n        facebook,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history);\n    };\n\n    return (\n        <Fragment>\n            <section id=\"Login\">\n                <div className=\"container\">\n                    <div style={{height: \"auto\"}} class=\"common-form\">\n                        <div className=\"form-side\">\n                            <div className=\"heading-common\">\n                                <h1><strong>Add Profile</strong>\n                                    <i className=\"far fa-id-card\"></i>\n                                </h1>  \n                                <p className=\"lead\">\n                                    <i className=\"fas fa-user\"></i> Let's get some information to make your\n                                    profile stand out\n                                </p>\n                            </div>\n                            <form onSubmit={e => onSubmit(e)}>\n                                <small>* = required field</small>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Enter your status. eg. Professor, Senior Specalist etc.\"\n                                    name=\"status\"\n                                    value={status}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">Give us an idea of where you are at in your career</small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Clinic\" \n                                    name=\"clinic\" \n                                    value={clinic}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">Could be your own clinic or one you work </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Specalist\"\n                                    name=\"specialists\" \n                                    value={specialists}\n                                    onChange={e => onChange(e)} required \n                                />\n                                <small className=\"form-text text-muted\">Give us an idea of your specalist. </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Timing\"\n                                    name=\"timing\"\n                                    value={timing}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">At which time you are available for patients, mention day with time. </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Ruppess\"\n                                    name=\"ruppess\"\n                                    value={ruppess}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">At which time you are available for patients, mention day with time. </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Website.\"\n                                    name=\"website\"\n                                    value={website}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">Could be your own or a clinic website </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Location.\"\n                                    name=\"location\"\n                                    value={location}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">Could be your own clinic address or one you work </small>\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className=\"form-control\" \n                                        placeholder=\"* A short bio of yourself\" \n                                        name=\"bio\"\n                                        value={bio}\n                                        onChange={e => onChange(e)} required\n                                    />\n                                    <small className=\"form-text\">Tell us a little about yourself</small>\n                                </div>\n\n                                <div className=\"mb-3\">\n                                    <button onClick={() => toggleSocialInputs(!displySocialInputs)}\n                                        type=\"button\" className=\"btn btn-outline-secondary\">\n                                        Add Social Network Links\n                                    </button>\n                                    <span className=\"text-muted\"> {' '}\n                                        Optional\n                                    </span>\n                                </div>\n                                {displySocialInputs && (\n                                    <Fragment>\n                                        <div>\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        <i className=\"fab fa-twitter\"></i>\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    placeholder=\"Twitter Profile URL\" \n                                                    name=\"twitter\" \n                                                    value={twitter} onChange={e => onChange(e)} />\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        <i className=\"fab fa-facebook\"></i>\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    placeholder=\"Facebook Profile URL\" \n                                                    name=\"facebook\" \n                                                    value={facebook} onChange={e => onChange(e)} />\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        <i className=\"fab fa-youtube\"></i>\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    placeholder=\"Youtube Profile URL\" \n                                                    name=\"youtube\" \n                                                    value={youtube} onChange={e => onChange(e)} />\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        <i className=\"fab fa-instagram\"></i>\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    placeholder=\"Instagram Profile URL\" \n                                                    name=\"instagram\" \n                                                    value={instagram} onChange={e => onChange(e)} />\n                                            </div>\n                                        </div>\n                                    </Fragment>\n                                )}\n                                <input type=\"submit\" className=\"btn btn-info\" /> {' '}\n                                <Link to=\"/dashboard\" className=\"btn btn-outline-secondary\">Go Back</Link>\n                            </form>\n                            <br />\n                        </div>\n                        <div className=\"img-side\">\n                            <img src={require(\"../../img/mention.svg\")} alt=\"\" className=\"register-user\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    );\n};\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired\n}\n\nexport default connect(null, {createProfile})(withRouter(CreateProfile));\n","import React, {useState, Fragment, useEffect} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\nimport {createProfile, getCurrentProfile} from '../../actions/profile';\n\nconst Edit = ({ profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\n    const [formData, setFormData] = useState({\n        clinic: '',\n        website: '',\n        location: '',\n        status: '',\n        specialists: '',\n        ruppess: '',\n        timing: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        youtube: '',\n        instagram: '' \n    });\n\n    const [displySocialInputs, toggleSocialInputs] = useState(false);\n    useEffect(() => {\n        getCurrentProfile();\n        setFormData({\n            clinic: loading || !profile.clinic ? '': profile.clinic,\n            website: loading || !profile.website ? '': profile.website,\n            location: loading || !profile.location ? '': profile.location,\n            status: loading || !profile.status ? '': profile.status,\n            specialists: loading || !profile.specialists ? '': profile.specialists,\n            ruppess: loading || !profile.ruppess ? '': profile.ruppess,\n            timing: loading || !profile.timing ? '': profile.timing,\n            bio: loading || !profile.bio ? '': profile.bio,\n            twitter: loading || !profile.social ? '': profile.social.twitter,\n            facebook: loading || !profile.social ? '': profile.social.facebook,\n            youtube: loading || !profile.social ? '': profile.social.youtube,\n            instagram: loading || !profile.social ? '': profile.social.instagram\n        });\n    },[loading, getCurrentProfile]);\n\n    const {\n        clinic,\n        website,\n        location,\n        status,\n        specialists,\n        ruppess,\n        timing,\n        bio,\n        twitter,\n        facebook,\n        youtube,\n        instagram\n    } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history);\n    };\n\n    return (\n        <Fragment>\n            <section id=\"Login\">\n                <div className=\"container\">\n                    <div style={{height: \"auto\"}} class=\"common-form\">\n                        <div className=\"form-side\">\n                            <div className=\"heading-common\">\n                                <h1><strong>Edit Profile</strong>{' '}\n                                    <i className=\"far fa-id-card\"></i>\n                                </h1>  \n                                <p className=\"lead\">\n                                    <i className=\"fas fa-user\"></i> Let's get some information to make your\n                                    profile stand out\n                                </p>\n                            </div>\n                            <form onSubmit={e => onSubmit(e)}>\n                                <small>* = required field</small>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Enter your status. eg. Professor, Senior Specalist etc.\"\n                                    name=\"status\"\n                                    value={status}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">Give us an idea of where you are at in your career</small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Clinic\" \n                                    name=\"clinic\" \n                                    value={clinic}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">Could be your own clinic or one you work </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"Specalist\"\n                                    name=\"specialists\" \n                                    value={specialists}\n                                    onChange={e => onChange(e)} required \n                                />\n                                <small className=\"form-text text-muted\">Give us an idea of your specalist. </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Timing\"\n                                    name=\"timing\"\n                                    value={timing}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">At which time you are available for patients, mention day with time. </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Ruppess\"\n                                    name=\"ruppess\"\n                                    value={ruppess}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">At which time you are available for patients, mention day with time. </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Website.\"\n                                    name=\"website\"\n                                    value={website}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">Could be your own or a clinic website </small>\n                                </div>\n                                <div className=\"form-group\">\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control\" \n                                    placeholder=\"* Location.\"\n                                    name=\"location\"\n                                    value={location}\n                                    onChange={e => onChange(e)} required\n                                />\n                                <small className=\"form-text text-muted\">Could be your own clinic address or one you work </small>\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className=\"form-control\" \n                                        placeholder=\"* A short bio of yourself\" \n                                        name=\"bio\"\n                                        value={bio}\n                                        onChange={e => onChange(e)} required\n                                    />\n                                    <small className=\"form-text\">Tell us a little about yourself</small>\n                                </div>\n\n                                <div className=\"mb-3\">\n                                    <button onClick={() => toggleSocialInputs(!displySocialInputs)}\n                                        type=\"button\" className=\"btn btn-outline-secondary\">\n                                        Add Social Network Links\n                                    </button>\n                                    <span className=\"text-muted\"> {' '}\n                                        Optional\n                                    </span>\n                                </div>\n                                {displySocialInputs && (\n                                    <Fragment>\n                                        <div>\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        <i className=\"fab fa-twitter\"></i>\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    placeholder=\"Twitter Profile URL\" \n                                                    name=\"twitter\" \n                                                    value={twitter} onChange={e => onChange(e)} />\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        <i className=\"fab fa-facebook\"></i>\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control form-control-lg\" \n                                                    placeholder=\"Facebook Profile URL\" \n                                                    name=\"facebook\" \n                                                    value={facebook} onChange={e => onChange(e)} />\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        <i className=\"fab fa-youtube\"></i>\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control form-control-lg\" \n                                                    placeholder=\"Youtube Profile URL\" \n                                                    name=\"youtube\" \n                                                    value={youtube} onChange={e => onChange(e)} />\n                                            </div>\n                                            <div className=\"input-group mb-3\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\">\n                                                        <i className=\"fab fa-instagram\"></i>\n                                                    </span>\n                                                </div>\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    placeholder=\"Instagram Profile URL\" \n                                                    name=\"instagram\" \n                                                    value={instagram} onChange={e => onChange(e)} />\n                                            </div>\n                                        </div>\n                                    </Fragment>\n                                )}\n                                <input type=\"submit\" className=\"btn btn-info\" /> {' '}\n                                <Link to=\"/dashboard\" className=\"btn btn-outline-secondary\">Go Back</Link>\n                            </form>\n                            <br />\n                        </div>\n                        <div className=\"img-side\">\n                            <img src={require(\"../../img/mention.svg\")} alt=\"\" className=\"register-user\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    );\n};\n\nEdit.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile:PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(Edit));\n","import React, { Fragment, useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\n\nconst ProfileItem = ({\n    profile: {\n        doctor: {_id, name, avatar },\n        clinic,\n        location,\n        specialists,\n        ruppess\n    },\n    authUser\n}) => {\n    \n    return (\n        <div classNameName=\"profiles\">\n            <div className=\"profile-1\">\n                    <div className=\"profile-img\">\n                        <img src={avatar} alt=\"\" />\n                    </div>\n                    <div className=\"profile-details\">\n                        <div className=\"profile-desc\">\n                            <h2 className=\"profile-heading\"><strong>{name}</strong></h2>\n                            <p className=\"profile-p\"><strong>{specialists}</strong> </p>\n                            <p className=\"profile-p2\"><strong>{clinic}</strong> {location}</p>\n                            <p className=\"profile-p2\"><strong>{ruppess}</strong> Consultation fee at clinic</p>\n                        </div>\n                    </div>\n                    <div className=\"mx-auto profile-buttons\">\n                        {authUser.isUserAuthenticated ? (\n                            <Fragment>\n                                <Link to={`/appointment/${_id}`} type=\"button\" className=\"rounded-pill profile-btn btn btn-info\"><i className=\"fas fa-calendar-check\"></i> Book Appointment</Link>\n                            </Fragment>\n                            ) : (\n                                <Fragment>\n                                    <button type=\"button\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Please Login as a User\" className=\"rounded-pill profile-btn btn btn-info disabled\">\n                                        <i className=\"fas fa-calendar-check\"></i> Book Appointment\n                                    </button>\n                                </Fragment>\n                            )\n                        }\n                        <Link to={`/doctor/${_id}`} type=\"button\" className=\"rounded-pill profile-btn btn btn-dark\">View Profile</Link>\n                    </div>\n                </div>\n        </div>\n    )\n};\n\nProfileItem.propTypes ={\n    profile: PropTypes.object.isRequired,\n    authUser: PropTypes.object.isRequired\n};\nconst mapStateToProps =state => ({\n    authUser: state.authUser\n});\n\nexport default connect(mapStateToProps)(ProfileItem);\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <section id=\"profiles-page\">\n            <div className=\"container\">\n              <div className=\"heading-common\">\n                <h1>\n                  <strong>Doctor Profiles</strong>\n                </h1>\n              </div>\n              <h2 className=\"welcome-heading\">\n                <i className=\"fas fa-user-md\"></i> Book your Appointments\n              </h2>\n              <br />\n              {profiles != null ? (\n                profiles.map((profile) => (\n                  <ProfileItem key={profile._id} profile={profile} />\n                ))\n              ) : (\n                <h4>No Profiles found..</h4>\n              )}\n            </div>\n          </section>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileTop = ({\n  profile: {\n    doctor: { name, avatar },\n    clinic,\n    location,\n    specialists,\n    ruppess,\n    website,\n    social,\n  },\n}) => {\n  return (\n    <div className=\"top-profile\">\n      <div className=\"top-details\">\n        <div className=\"top-img\">\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <h2 className=\"profile-top-heading\">\n            <strong>{name}</strong>\n          </h2>\n          <br />\n          <h3 className=\"profile-top-desc\">{specialists}</h3>\n          <br />\n          <p className=\"profile-top-p\">\n            {clinic}, {location}\n          </p>\n          <p className=\"fee\">\n            <strong>{ruppess} </strong>Consultation Fee\n          </p>\n          <div className=\"logos\">\n            {website && (\n              <a\n                className=\"logo\"\n                href={website}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fas fa-globe fa-2x\"></i>\n              </a>\n            )}\n            {social && social.twitter && (\n              <a\n                className=\"logo\"\n                href={social.twitter}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fab fa-twitter fa-2x\"></i>\n              </a>\n            )}\n            {social && social.facebook && (\n              <a\n                className=\"logo\"\n                href={social.facebook}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fab fa-facebook-square fa-2x\"></i>\n              </a>\n            )}\n            {social && social.instagram && (\n              <a\n                className=\"logo\"\n                href={social.instagram}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fab fa-instagram fa-2x\"></i>\n              </a>\n            )}\n            {social && social.youtube && (\n              <a\n                className=\"logo\"\n                href={social.youtube}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fab fa-youtube fa-2x\"></i>\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"top-profile-img\">\n        // eslint-disable-next-line\n        <img src={require(\"../../img/doctor4.svg\")} />\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({ \n    profile: {\n        bio,\n        timing,\n        doctor: {name}\n    }\n}) => {\n    return (\n        <Fragment>\n            <div className=\"top-bio\">\n                <div className=\"bio\">\n                    <h2 className=\"heading-bio\">Dr. {(name.split(' ')[1])}'s Bio</h2>\n                    <p className=\"bio-p\">{bio}</p>\n                </div>\n                <hr />\n                <div className=\"time\">\n                    <h2 className=\"heading-bio\">Timing</h2>\n                    <p className=\"bio-p\">{timing}</p>\n                </div>\n            </div>\n            <br />\n        </Fragment>\n    )\n};\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({\n    experience: {\n        medical, position, location ,from, to, description\n    }\n}) => {\n    return (\n        <Fragment>\n            <div className=\"exp-common-details\">\n                <h5 className=\"profile-p\"><strong>{medical}</strong></h5>\n                <p className=\"mar-1\">\n                    <Moment format='DD/MM/YYYY'>{from}</Moment> - {\n                        !to ? 'Now' : <Moment format='DD/MM/YYYY'>{to}</Moment>\n                    }\n                </p>\n                <p><strong>Position: </strong> {position}</p>\n                <p><strong>Location: </strong> {location}</p>\n                <p><strong>Description: </strong>{description}</p>\n            </div>\n            <hr />\n        </Fragment>\n    )\n};\n\nProfileExperience.propTypes = {\n    experience: PropTypes.array.isRequired\n};\n\nexport default ProfileExperience;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileEducation = ({ \n    education : {\n        school, degree, fieldofstudy,from, to, description\n    }\n}) => {\n    return (\n        <Fragment>\n            <div class=\"exp-common-details\">\n                <h5 className=\"profile-p\"><strong>{school}</strong></h5>\n                <p class=\"mar-1\"><Moment format='DD/MM/YYYY'>{from}</Moment> - \n                    {\n                        !to ? 'Now' : <Moment format='DD/MM/YYYY'>{to}</Moment>\n                    }\n                </p>\n                <p><strong>Degree: </strong> {degree}</p>\n                <p><strong>Field of Study: </strong>{fieldofstudy}</p>\n                <p><strong>Description: </strong>{description}</p>\n            </div>\n            <hr/>\n        </Fragment>\n    )\n};\n\nProfileEducation.propTypes = {\n    education: PropTypes.array.isRequired\n};\n\nexport default ProfileEducation;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport {deleteReview} from '../../actions/profile';\nimport { connect } from 'react-redux';\n\nconst ProfileReview = ({\n    doctorId,\n    review: { _id, text, name, avatar, date, user},\n    authUser,\n    deleteReview\n}) => {\n\n    return (\n        <Fragment>\n            <div className=\"current-review\">\n                <div className=\"img-user\">\n                    <img className=\"user-pic round-img\" src={avatar} alt=\"\" />\n                    <h6><strong>{name}</strong></h6>\n                </div>\n                <div className=\"user-review\">\n                    <p>{text}</p>\n                    <p className=\"post-date\">\n                          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n                    </p>\n                    {\n                        authUser.user !== null && user === authUser.user._id && (\n                        <button\n                            onClick={e => deleteReview(doctorId, _id)}\n                            className=\"btn btn-danger\">X</button>\n                    )}\n                </div>\n            </div>\n        </Fragment>\n    )\n};\n\nProfileReview.propTypes = {\n    profileId: PropTypes.number.isRequired,\n    review: PropTypes.object.isRequired,\n    authUser: PropTypes.object.isRequired,\n    deleteReview: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n    authUser: state.authUser\n});\n\nexport default connect(mapStateToProps, {deleteReview})(ProfileReview);\n","import React, {Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addReview} from '../../actions/review';\n\nconst ReviewForm = ({ doctorId, addReview }) => {\n    const [text, setText] = useState('');\n\n    return (\n        <Fragment>\n            <div className=\"text-area-style\">\n                <form onSubmit={e => {\n                    e.preventDefault();\n                    addReview(doctorId, { text });\n                    setText('');\n                    }}>\n                    <textarea \n                        className=\"text-area\" \n                        name=\"text\" cols=\"30\" rows=\"5\" \n                        placeholder=\"Write a review\" \n                        required\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                    >\n                    </textarea>\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-secondary\" />\n                </form>\n            </div>\n        </Fragment>\n    );\n};\n\nReviewForm.propTypes = {\n    addReview: PropTypes.func.isRequired\n};\n\nexport default connect(null, {addReview})(ReviewForm);\n","import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    ADD_REVIEW,\n    ADD_REVIEW_ERROR,\n    REMOVE_REVIEW\n} from './types';\n\n// Add review\nexport const addReview = (doctorId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    try {\n        const res = await axios.post(`/api/profile/doctor/${doctorId}`, formData, config);\n        \n        dispatch({\n            type: ADD_REVIEW,\n            payload: res.data.review\n        });\n\n        dispatch(setAlert('Review Added', 'success'))\n    } catch (err) {\n        dispatch ({\n            type: ADD_REVIEW_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};\n\n// Delete Review\nexport const deleteReview = (doctorId, reviewId) => async dispatch => {\n    try {\n        await axios.delete(`/api/profile/doctor/${doctorId}/${reviewId}`);\n        dispatch({\n            type: REMOVE_REVIEW,\n            payload: reviewId\n        });\n\n        dispatch(setAlert('Comment removed', 'success'));\n    } catch (err) {\n        dispatch ({\n            type: ADD_REVIEW_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    }\n};","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfileById } from \"../../actions/profile\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileReview from \"./ProfileReview\";\nimport ReviewForm from \"../profile/ReviewForm\";\nimport { Link } from \"react-router-dom\";\n\nconst Profile = ({\n  getProfileById,\n  profile: { profileById, loading },\n  authDoctor,\n  authUser,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profileById === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <section id=\"profile-page\">\n            <div class=\"container\">\n              <div class=\"current-profile\">\n                <div class=\"current-btn\">\n                  <Link class=\"rounded-pill btn btn-dark\" to=\"/profiles\">\n                    Back to Profiles\n                  </Link>\n                  {authUser.isUserAuthenticated ? (\n                    <Fragment>\n                      <Link\n                        to={`/appointment/${profileById.doctor._id}`}\n                        type=\"button\"\n                        className=\"rounded-pill btn btn-info\"\n                      >\n                        <i className=\"fas fa-calendar-check\"></i> Book\n                        Appointment\n                      </Link>\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      <a\n                        href=\"#\"\n                        data-toggle=\"tooltip\"\n                        data-placement=\"right\"\n                        title=\"Please Login as a User\"\n                        className=\"rounded-pill btn btn-info disabled\"\n                      >\n                        <i className=\"fas fa-calendar-check\"></i> Book\n                        Appointment\n                      </a>\n                    </Fragment>\n                  )}\n                  {authDoctor.isDoctorAuthenticated &&\n                    authDoctor.loadingDoctor === false &&\n                    authDoctor.doctor._id === profileById.doctor._id && (\n                      <Link\n                        to=\"/edit-profile\"\n                        className=\"rounded-pill btn btn-secondary\"\n                      >\n                        <i class=\"fas fa-edit\"></i>\n                      </Link>\n                    )}\n                </div>\n                <ProfileTop profile={profileById} />\n                <ProfileAbout profile={profileById} />\n                <div className=\"exp-edu\">\n                  <div className=\"exp-bottom\">\n                    <h2 className=\"exp-common-heading\">Experience</h2>\n                    {profileById.experience.length > 0 ? (\n                      <Fragment>\n                        {profileById.experience.map((experience) => (\n                          <ProfileExperience\n                            key={experience._id}\n                            experience={experience}\n                          />\n                        ))}\n                      </Fragment>\n                    ) : (\n                      <h4>No Experience credentials</h4>\n                    )}\n                  </div>\n                  <div className=\"edu-bottom\">\n                    <h2 className=\"exp-common-heading\">Education</h2>\n                    {profileById.education.length > 0 ? (\n                      <Fragment>\n                        {profileById.education.map((education) => (\n                          <ProfileEducation\n                            key={education._id}\n                            education={education}\n                          />\n                        ))}\n                      </Fragment>\n                    ) : (\n                      <h4>No education credentials</h4>\n                    )}\n                  </div>\n                </div>\n                <div class=\"patient-review\">\n                  <h2 class=\"exp-common-heading\">Patient Reviews</h2>\n                  {authUser.isUserAuthenticated ? (\n                    <ReviewForm doctorId={profileById.doctor._id} />\n                  ) : (\n                    \"\"\n                  )}\n                  {profileById.review.map((rev) => (\n                    <ProfileReview\n                      key={rev._id}\n                      review={rev}\n                      doctorId={match.params.id}\n                    />\n                  ))}\n                </div>\n              </div>\n            </div>\n          </section>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  authDoctor: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  authDoctor: state.authDoctor,\n  authUser: state.authUser,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\n\nconst PrivateDoctorRoute = ({component: Component, \n    authDoctor: {isDoctorAuthenticated, loadingDoctor},\n    ...rest}) => (\n        <Route\n            {...rest}\n            render = {props =>     \n                !isDoctorAuthenticated && !loadingDoctor ? (\n                    <Redirect to=\"/loginDoctor\" />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n);\n\nPrivateDoctorRoute.propTypes = {\n    authDoctor: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    authDoctor: state.authDoctor\n});\n\nexport default connect(mapStateToProps)(PrivateDoctorRoute);\n","import React, { Fragment } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Moment from 'react-moment';\nimport {deleteAppointment} from '../../actions/appointment';\n\nconst AppointmentItems = ({\n        appointment, deleteAppointment,\n    }) => {\n    \n    const appointments = appointment.map(appnt => (\n        <div key={appnt.id} className=\"profile-1\">\n            <div className=\"profile-img\">\n                <Link to={`/doctor/${appnt.doctor}`}>\n                    <img src={appnt.avatar} alt=\"\" />\n                </Link>\n                <h5 className=\"heading-sub\"><strong>{appnt.name}</strong></h5>\n            </div>\n            <div className=\"profile-details\">\n                <div className=\"appointment-p profile-desc\">\n                    <h2 className=\"profile-heading\"><strong>{appnt.patientname}</strong></h2>\n                    <p className=\"profile-p\"><strong>Father's name: {appnt.fathername}</strong></p>\n                    <p className=\"profile-p2\"><strong>Age: </strong>{appnt.age}</p>\n                    <p className=\"profile-p2\"><strong>Status: </strong>{appnt.status}</p>\n                    <p className=\"profile-p2\"><strong>Date: </strong><Moment format='DD/MM/YYYY'>{appnt.date}</Moment></p>\n                    <p className=\"profile-p2\"><strong>Booking ID: </strong>{appnt.bookingId}</p>\n                </div>\n            </div>\n            <div className=\"desc-p\">\n                <p className=\"profile-p2\"><strong>Description: </strong>{appnt.description}</p>\n                <button onClick={() => deleteAppointment(appnt._id)} type=\"button\" className=\"profile-btn btn btn-danger\">Cancel</button>\n            </div>\n        </div>\n    ));\n    return (\n        <Fragment>\n            {appointments}\n        </Fragment>\n    );\n};\n\nAppointmentItems.propTypes = {\n    appointment: PropTypes.array.isRequired,\n    deleteAppointment: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteAppointment})(AppointmentItems);\n","import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    GET_APPOINTMENTS,\n    ADD_APPOINTMENTS,\n    UPDATE_APPOINTMENTS,\n    APPOINTMENT_ERROR,\n    DELETE_USER_ACCOUNT\n} from './types';\n\n// Get Appointments\nexport const getAppointments = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/authUser');\n        dispatch({\n            type: GET_APPOINTMENTS,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type: APPOINTMENT_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n        });\n    };\n};\n\n// Add appointment\nexport const addAppointment = (doctorId, formData, history) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    try {\n        const res = await axios.post(`/api/appointment/${doctorId}`,formData, config);\n        dispatch({\n            type: ADD_APPOINTMENTS,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Appointment booked', 'success'));\n        history.push('/appointment');\n        \n    } catch (err) {\n        dispatch({\n            type: APPOINTMENT_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    };\n};\n\n// Delete appointment\nexport const deleteAppointment = (appointmentId) => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/authUser/${appointmentId}`);\n        dispatch({\n            type: UPDATE_APPOINTMENTS,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Appointment removed', 'success'));\n    } catch (err) {\n        dispatch({\n            type: APPOINTMENT_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        });\n    };\n};\n\n// Delete user account\nexport const deleteAccountUser = () => async dispatch => {\n    if(window.confirm('Are you sure? this can not be undone!')) {\n        try {\n            await axios.delete('/api/authUser');\n\n            dispatch({\n                type: DELETE_USER_ACCOUNT\n            });\n\n            dispatch(setAlert(\"Your account has been removed\", 'success'));\n        } catch (err) {\n            dispatch ({\n                type: APPOINTMENT_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            });\n        }\n    }\n}\n","import React, { useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport AppointmentItems from \"./AppointmentItems\";\nimport { getAppointments, deleteAccountUser } from \"../../actions/appointment\";\n\nconst Appointments = ({\n  getAppointments,\n  deleteAccountUser,\n  authUser: { user },\n  appointment: { appointments, loading },\n}) => {\n  useEffect(() => {\n    getAppointments();\n  }, [getAppointments]);\n\n  return (\n    <Fragment>\n      {loading && appointments !== null ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <section id=\"dashboard\">\n            <div class=\"container\">\n              <div class=\"heading-common\">\n                <h1>\n                  <strong>Appointments</strong>\n                </h1>\n                <h2 class=\"welcome-heading\">\n                  <i class=\"fas fa-calendar-check\"></i>{\" \"}\n                  {user && user.name.split(\" \")[0].toLocaleUpperCase()}'s\n                  appointments\n                </h2>\n                <div\n                  className=\"mt-3\"\n                  style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                >\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={() => deleteAccountUser()}\n                  >\n                    <i className=\"fas fa-user-minus\"></i>\n                    Delete My Account\n                  </button>\n                </div>\n              </div>\n              <div class=\"common-details\">\n                <br />\n                {appointments !== null &&\n                appointments.appointments.length !== 0 ? (\n                  <div class=\"profiles\">\n                    <Fragment>\n                      <AppointmentItems\n                        appointment={appointments.appointments}\n                      />\n                    </Fragment>\n                  </div>\n                ) : (\n                  <h4 style={{ color: \"#738f93\" }}>No Appointments found...</h4>\n                )}\n              </div>\n            </div>\n          </section>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nAppointments.propTypes = {\n  getAppointments: PropTypes.func.isRequired,\n  deleteAccountUser: PropTypes.func.isRequired,\n  authUser: PropTypes.object.isRequired,\n  appointment: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authUser: state.authUser,\n  appointment: state.appointment,\n});\n\nexport default connect(mapStateToProps, { getAppointments, deleteAccountUser })(\n  Appointments\n);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addAppointment} from '../../actions/appointment';\nimport { Link } from 'react-router-dom';\n\n\nconst Form = ({profile, doctorId,history, addAppointment}) => {\n\n    const [formData, setFormData] = useState({\n        patientname: '',\n        fathername: '',\n        age:'',\n        status:'',\n        date:'',\n        description:''\n    });   \n\n    const {\n        patientname,\n        fathername,\n        age,\n        status,\n        date,\n        description\n    } = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n    return (\n        <Fragment>\n        <br />\n            <div className=\"heading-common\">\n                <h1><strong>Book Appointment</strong>\n                </h1>  \n                <p className=\"lead\">\n                    Provide your details correctly and book your appointment.\n                </p>\n            <div className=\"appointment-doctor\">\n                <img className=\"round-img appointment-img\" src={profile.avatar} alt=\"\" />\n                <p className=\"lead\"><strong>{profile.name}</strong></p>\n            </div>\n            </div>\n            <form onSubmit={e => {\n                e.preventDefault();\n                addAppointment(doctorId, formData, history);  \n            }}>\n                <small>* = required field</small>\n                <div className=\"form-group\">\n                <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"* Patient name\"\n                    name=\"patientname\"\n                    value={patientname}\n                    onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"text\" \n                    className=\"form-control\" \n                    placeholder=\"* Father name\"\n                    name=\"fathername\" \n                    value={fathername} \n                    onChange={e => onChange(e)} />\n                </div>                    \n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        placeholder=\"* Age\"\n                        name=\"age\" \n                        value={age} \n                        onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        placeholder=\"* Status\"\n                        name=\"status\" \n                        value={status} \n                        onChange={e => onChange(e)} />\n                        <small className=\"form-text\">Status like profession (eg. student, job etc)</small>\n                    </div>\n                    <h6>Date</h6>\n                <div className=\"form-group\">\n                    <input \n                        type=\"date\" \n                        className=\"form-control\" \n                        name=\"date\" \n                        value={date}\n                        onChange={e => onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                    <textarea \n                        className=\"form-control\" \n                        placeholder=\"* Health Problem Description\" \n                        name=\"description\" \n                        value={description}\n                        onChange={e => onChange(e)}\n                        ></textarea>\n                    <small className=\"form-text\">Tell us about the Health Problem.</small>\n                </div>\n                <input type=\"submit\" value=\"Submit\" className=\"btn btn-info\" />{' '}\n                <Link to=\"/profiles\" type=\"submit\" className=\"btn btn-outline-secondary\">Go Back</Link>\n            </form>\n            <br />\n        </Fragment>\n    );\n};\n\nForm.propTypes = {\n    addAppointment: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addAppointment})(Form);\n","import React, { useEffect, useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {getProfileById} from '../../actions/profile';\nimport Form from './Form';\nimport { withRouter } from 'react-router-dom';\n\nconst AppointmentForm = ({\n    getProfileById,\n    profile: {profileById},\n    match,\n    history\n}) => {\n    useEffect(() => {\n        getProfileById(match.params.id)\n    },[getProfileById, match.params.id]);\n\n    return (\n        <Fragment>\n            <section id=\"Login\">\n                <div className=\"container\">\n                    <div className=\"common-form\">\n                        <div className=\"form-side\">\n                            {\n                                profileById !== null ? \n                                (\n                                    <Form profile={profileById.doctor} history={history} doctorId={profileById.doctor._id} />\n                                ) : (\n                                    \"\"\n                                )\n                            }\n                        </div>\n                        <div className=\"img-side\">\n                            <img src={require(\"../../img/calendar.svg\")} alt=\"\" className=\"register-user\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    );\n};\n\nAppointmentForm.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n});\n\nexport default connect(mapStateToProps, {getProfileById})(withRouter(AppointmentForm));\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\n\nconst PrivateUserRoute = ({component: Component, \n    authUser: {isUserAuthenticated, loadingUser},\n    ...rest}) => (\n        <Route\n            {...rest}\n            render = {props =>     \n                !isUserAuthenticated && !loadingUser ? (\n                    <Redirect to=\"/loginUser\" />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n);\n\nPrivateUserRoute.propTypes = {\n    authUser: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    authUser: state.authUser\n});\n\nexport default connect(mapStateToProps)(PrivateUserRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function( state = initialState, action) {\n    const {type, payload} = action;\n    switch (type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","import {\n    REGISTER_DOCTOR_SUCCESS,\n    REGISTER_DOCTOR_FAIL,\n    DOCTOR_LOADED,\n    AUTH_DOCTOR_ERROR,\n    LOGIN_DOCTOR_SUCCESS,\n    LOGIN_DOCTOR_FAIL,\n    LOGOUT_DOCTOR,\n    DELETE_ACCOUNT\n    \n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isDoctorAuthenticated: null,\n    loadingDoctor: true,\n    doctor: null\n}\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action;\n    switch (type) {\n        case DOCTOR_LOADED:\n            return {\n                ...state,\n                isDoctorAuthenticated: true,\n                loadingDoctor: false,\n                doctor: payload\n            };\n        case REGISTER_DOCTOR_SUCCESS:            \n        case LOGIN_DOCTOR_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isDoctorAuthenticated: true,\n                loadingDoctor: false\n            };\n        case REGISTER_DOCTOR_FAIL:\n        case LOGIN_DOCTOR_FAIL:\n        case DELETE_ACCOUNT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isDoctorAuthenticated: false,\n                loadingDoctor: false\n            }; \n        case LOGOUT_DOCTOR:\n        case AUTH_DOCTOR_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isDoctorAuthenticated: false,\n                loadingDoctor: false\n            };         \n        default:\n            return state;\n    }\n}","import {\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    USER_LOADED,\n    AUTH_USER_ERROR,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAIL,\n    LOGOUT_USER,\n    DELETE_USER_ACCOUNT\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isUserAuthenticated: null,\n    loadingUser: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action;\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isUserAuthenticated: true,\n                loadingUser: false,\n                user: payload\n            };\n        case REGISTER_USER_SUCCESS:            \n        case LOGIN_USER_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isUserAuthenticated: true,\n                loadingUser: false\n            };\n        case REGISTER_USER_FAIL:\n        case LOGIN_USER_FAIL:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isUserAuthenticated: false,\n                loadingUser: false\n            }; \n        case AUTH_USER_ERROR:\n        case LOGOUT_USER:\n        case DELETE_USER_ACCOUNT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isUserAuthenticated: false,\n                loadingUser: false\n            };    \n        default:\n            return state;\n    }\n}","import {\n    GET_PROFILE,\n    GET_PROFILE_BY_ID,\n    GET_PROFILES,\n    UPDATE_PROFILE,\n    PROFILE_ERROR,\n    CLEAR_PROFILE,\n    ADD_REVIEW,\n    ADD_REVIEW_ERROR,\n    REMOVE_REVIEW\n} from '../actions/types';\n\nconst initialState = {\n    profileById: null,\n    profile: null,\n    profiles: [],\n    loading: true,\n    error: {}\n}\n\nexport default function( state = initialState, action) {\n    const {type, payload} = action;\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE:\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            };\n        case GET_PROFILE_BY_ID:\n            return {\n                ...state,\n                profileById: payload,\n                loading: false\n            };\n        \n        case ADD_REVIEW: \n            return {\n                ...state,\n                profileById: { ...state.profileById, review: payload },\n                loading: false   \n            };\n        case REMOVE_REVIEW:\n            return {\n                ...state,\n                profileById: {\n                    ...state.profileById,\n                    review: state.profileById.review.filter(comment => comment._id !== payload)\n                },\n                loading: false\n            };\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            };\n        case PROFILE_ERROR:\n        case ADD_REVIEW_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n        case CLEAR_PROFILE:\n            return {\n                ...state,\n                profile: null,\n                loading: false\n            };\n    \n        default:\n            return state;\n    }\n}","import {\n    GET_APPOINTMENTS,\n    ADD_APPOINTMENTS,\n    UPDATE_APPOINTMENTS,\n    APPOINTMENT_ERROR,\n} from '../actions/types';\n\nconst initalState = {\n    appointments: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state=initalState, action) {\n    const {type, payload} = action;\n\n    switch(type) {\n        case GET_APPOINTMENTS:\n            return {\n                ...state,\n                appointments: payload,\n                loading: false\n            };\n        case ADD_APPOINTMENTS:\n            return {\n                ...state,\n                appointments: payload,\n                loading: false\n            };\n        case UPDATE_APPOINTMENTS:\n            return {\n                ...state,\n                appointments: payload,\n                loading: false\n            }\n        case APPOINTMENT_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n        default:\n            return state;\n    }\n}\n\n","import {combineReducers} from 'redux';\nimport alert from './alert';\nimport authDoctor from './authDoctor';\nimport authUser from './authUser';\nimport profile from './profile';\nimport appointment from './appointment';\n\nexport default combineReducers({\n    alert,\n    authDoctor,\n    authUser,\n    profile,\n    appointment\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\n\nexport default store;","import React, { useEffect, Fragment } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Alert from './components/layout/Alert';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport LoginUser from './components/auth/LoginUser';\nimport LoginDoctor from './components/auth/LoginDoctor';\nimport DoctorRegister from './components/auth/DoctorRegister';\nimport UserRegister from './components/auth/UserRegister';\nimport Dashboard from './components/dashboard/Dashboard';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport PrivateDoctorRoute from './components/routing/PrivateDoctorRoute';\nimport Appointment from './components/user/Appointments';\nimport AppointmentForm from './components/bookappointment/AppointmentForm';\nimport PrivateUserRoute from './components/routing/PrivateUserRoute';\nimport './App.css';\n\n// Redux\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/authUser';\nimport { loadDoctor } from './actions/authDoctor';\nimport setAuthToken from './utils/setAuthToken';\n\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n    store.dispatch(loadDoctor());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <div className=\"container\">\n            <Alert />\n            <Switch>\n              <Route exact path='/loginUser' component={LoginUser} />\n              <Route exact path='/loginDoctor' component={LoginDoctor} />\n              <Route exact path='/registerDoctor' component={DoctorRegister} />\n              <Route exact path='/registerUser' component={UserRegister} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/doctor/:id' component={Profile} />\n              <PrivateDoctorRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateDoctorRoute exact path='/add-education' component={AddEducation} />\n              <PrivateDoctorRoute exact path='/add-experience' component={AddExperience} />\n              <PrivateDoctorRoute exact path='/create-profile' component={CreateProfile} />\n              <PrivateDoctorRoute exact path='/edit-profile' component={EditProfile} />\n              <PrivateUserRoute   exact path='/appointment' component={Appointment} />\n              <PrivateUserRoute   exact path='/appointment/:id' component={AppointmentForm} />\n            </Switch>\n          </div>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/doctor (1).82ea1db8.png\";","module.exports = __webpack_public_path__ + \"static/media/mention.f7204bb0.svg\";"],"sourceRoot":""}